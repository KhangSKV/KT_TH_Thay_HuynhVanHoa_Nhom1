
Lab8_2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001284  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08001418  08001418  00020024  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08001418  08001418  00020024  2**0
                  CONTENTS
  4 .ARM          00000000  08001418  08001418  00020024  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001418  08001418  00020024  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001418  08001418  00011418  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800141c  0800141c  0001141c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000024  20000000  08001420  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001ac  20000024  08001444  00020024  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001d0  08001444  000201d0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020024  2**0
                  CONTENTS, READONLY
 12 .debug_info   00004db7  00000000  00000000  00020054  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000ef9  00000000  00000000  00024e0b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000678  00000000  00000000  00025d08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000005e0  00000000  00000000  00026380  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000ebb3  00000000  00000000  00026960  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00003cc8  00000000  00000000  00035513  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000447f9  00000000  00000000  000391db  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000cb  00000000  00000000  0007d9d4  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001b74  00000000  00000000  0007daa0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000024 	.word	0x20000024
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08001400 	.word	0x08001400

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000028 	.word	0x20000028
 80001d0:	08001400 	.word	0x08001400

080001d4 <main>:
static __IO uint16_t uhADCConvertedValue = 0;
uint16_t Light;

//---------------------------------------------------------------------------
int main(void)
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	af00      	add	r7, sp, #0
	AppInitCommon();
 80001d8:	f000 f803 	bl	80001e2 <AppInitCommon>

	while(1)
	{
		MultiSensorScan();
 80001dc:	f000 f80e 	bl	80001fc <MultiSensorScan>
 80001e0:	e7fc      	b.n	80001dc <main+0x8>

080001e2 <AppInitCommon>:
 * @param  None
 * @retval None
 */
static void
AppInitCommon(void)
{
 80001e2:	b580      	push	{r7, lr}
 80001e4:	af00      	add	r7, sp, #0
	// Use clock is 84MHz------------------------------------------------------
	SystemCoreClockUpdate();
 80001e6:	f000 f98b 	bl	8000500 <SystemCoreClockUpdate>

	// Initializes system tick-------------------------------------------------
	TimerInit();
 80001ea:	f001 f88f 	bl	800130c <TimerInit>

	// Initializes Read Temperature--------------------------------------------
	LightSensor_Init1();
 80001ee:	f000 f853 	bl	8000298 <LightSensor_Init1>

	// Initializes USART-------------------------------------------------------
	USART1_Init();
 80001f2:	f000 f8e5 	bl	80003c0 <USART1_Init>

}
 80001f6:	bf00      	nop
 80001f8:	bd80      	pop	{r7, pc}
	...

080001fc <MultiSensorScan>:
 * @param  None
 * @retval None
 */
static void
MultiSensorScan(void)
{
 80001fc:	b580      	push	{r7, lr}
 80001fe:	b082      	sub	sp, #8
 8000200:	af00      	add	r7, sp, #0
	uint32_t dwTimeCurrent;
	static uint32_t dwTimeTotal, dwTimeInit;

	dwTimeCurrent = GetMilSecTick();
 8000202:	f001 f8a5 	bl	8001350 <GetMilSecTick>
 8000206:	6078      	str	r0, [r7, #4]

	if (dwTimeCurrent >= dwTimeInit)
 8000208:	4b19      	ldr	r3, [pc, #100]	; (8000270 <MultiSensorScan+0x74>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	687a      	ldr	r2, [r7, #4]
 800020e:	429a      	cmp	r2, r3
 8000210:	d309      	bcc.n	8000226 <MultiSensorScan+0x2a>
	{
		dwTimeTotal += dwTimeCurrent - dwTimeInit;
 8000212:	4b17      	ldr	r3, [pc, #92]	; (8000270 <MultiSensorScan+0x74>)
 8000214:	681b      	ldr	r3, [r3, #0]
 8000216:	687a      	ldr	r2, [r7, #4]
 8000218:	1ad2      	subs	r2, r2, r3
 800021a:	4b16      	ldr	r3, [pc, #88]	; (8000274 <MultiSensorScan+0x78>)
 800021c:	681b      	ldr	r3, [r3, #0]
 800021e:	4413      	add	r3, r2
 8000220:	4a14      	ldr	r2, [pc, #80]	; (8000274 <MultiSensorScan+0x78>)
 8000222:	6013      	str	r3, [r2, #0]
 8000224:	e009      	b.n	800023a <MultiSensorScan+0x3e>
	}
	else
	{
		dwTimeTotal += 0xFFFFFFFFU - dwTimeCurrent + dwTimeInit;
 8000226:	4b12      	ldr	r3, [pc, #72]	; (8000270 <MultiSensorScan+0x74>)
 8000228:	681a      	ldr	r2, [r3, #0]
 800022a:	687b      	ldr	r3, [r7, #4]
 800022c:	1ad2      	subs	r2, r2, r3
 800022e:	4b11      	ldr	r3, [pc, #68]	; (8000274 <MultiSensorScan+0x78>)
 8000230:	681b      	ldr	r3, [r3, #0]
 8000232:	4413      	add	r3, r2
 8000234:	3b01      	subs	r3, #1
 8000236:	4a0f      	ldr	r2, [pc, #60]	; (8000274 <MultiSensorScan+0x78>)
 8000238:	6013      	str	r3, [r2, #0]
	}

	if (dwTimeTotal >= 1000)
 800023a:	4b0e      	ldr	r3, [pc, #56]	; (8000274 <MultiSensorScan+0x78>)
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8000242:	d30e      	bcc.n	8000262 <MultiSensorScan+0x66>
	{
		// Time scan 1s------------------------------------------------------
		dwTimeTotal = 0;
 8000244:	4b0b      	ldr	r3, [pc, #44]	; (8000274 <MultiSensorScan+0x78>)
 8000246:	2200      	movs	r2, #0
 8000248:	601a      	str	r2, [r3, #0]
		Light = LightSensor_MeasureUseDMA();
 800024a:	f000 f819 	bl	8000280 <LightSensor_MeasureUseDMA>
 800024e:	4603      	mov	r3, r0
 8000250:	461a      	mov	r2, r3
 8000252:	4b09      	ldr	r3, [pc, #36]	; (8000278 <MultiSensorScan+0x7c>)
 8000254:	801a      	strh	r2, [r3, #0]
		USART_SendData(USART2, Light);
 8000256:	4b08      	ldr	r3, [pc, #32]	; (8000278 <MultiSensorScan+0x7c>)
 8000258:	881b      	ldrh	r3, [r3, #0]
 800025a:	4619      	mov	r1, r3
 800025c:	4807      	ldr	r0, [pc, #28]	; (800027c <MultiSensorScan+0x80>)
 800025e:	f000 fff7 	bl	8001250 <USART_SendData>
	}

	dwTimeInit = dwTimeCurrent;
 8000262:	4a03      	ldr	r2, [pc, #12]	; (8000270 <MultiSensorScan+0x74>)
 8000264:	687b      	ldr	r3, [r7, #4]
 8000266:	6013      	str	r3, [r2, #0]
}
 8000268:	bf00      	nop
 800026a:	3708      	adds	r7, #8
 800026c:	46bd      	mov	sp, r7
 800026e:	bd80      	pop	{r7, pc}
 8000270:	20000044 	.word	0x20000044
 8000274:	20000048 	.word	0x20000048
 8000278:	20000042 	.word	0x20000042
 800027c:	40004400 	.word	0x40004400

08000280 <LightSensor_MeasureUseDMA>:
 * @brief  Measure value ADC in mode DMA
 * @param  None
 * @retval Value of ADC
 */
uint16_t
LightSensor_MeasureUseDMA(void) {
 8000280:	b480      	push	{r7}
 8000282:	af00      	add	r7, sp, #0
	return uhADCConvertedValue;
 8000284:	4b03      	ldr	r3, [pc, #12]	; (8000294 <LightSensor_MeasureUseDMA+0x14>)
 8000286:	881b      	ldrh	r3, [r3, #0]
 8000288:	b29b      	uxth	r3, r3
}
 800028a:	4618      	mov	r0, r3
 800028c:	46bd      	mov	sp, r7
 800028e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000292:	4770      	bx	lr
 8000294:	20000040 	.word	0x20000040

08000298 <LightSensor_Init1>:
 * @brief  Initializes Read Temperature
 * @param  None
 * @retval None
 */
void LightSensor_Init1(void)
{
 8000298:	b580      	push	{r7, lr}
 800029a:	b09c      	sub	sp, #112	; 0x70
 800029c:	af00      	add	r7, sp, #0
	ADC_InitTypeDef       ADC_InitStructure;
	ADC_CommonInitTypeDef ADC_CommonInitStructure;
	DMA_InitTypeDef       DMA_InitStructure;

	/* Enable peripheral clocks *************************************************/
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_DMA2, ENABLE);
 800029e:	2101      	movs	r1, #1
 80002a0:	f44f 0080 	mov.w	r0, #4194304	; 0x400000
 80002a4:	f000 fe7a 	bl	8000f9c <RCC_AHB1PeriphClockCmd>
	RCC_APB2PeriphClockCmd(ADCx_CLK, ENABLE);
 80002a8:	2101      	movs	r1, #1
 80002aa:	f44f 7080 	mov.w	r0, #256	; 0x100
 80002ae:	f000 feb5 	bl	800101c <RCC_APB2PeriphClockCmd>

	GPIO_InitTypeDef GPIO_InitStructure;

	/* GPIOA, GPIOB and GPIOE Clocks enable */
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC, ENABLE);
 80002b2:	2101      	movs	r1, #1
 80002b4:	2004      	movs	r0, #4
 80002b6:	f000 fe71 	bl	8000f9c <RCC_AHB1PeriphClockCmd>

	GPIO_InitStructure.GPIO_Pin = ADC_PIN;
 80002ba:	2320      	movs	r3, #32
 80002bc:	607b      	str	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
 80002be:	2303      	movs	r3, #3
 80002c0:	723b      	strb	r3, [r7, #8]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 80002c2:	2300      	movs	r3, #0
 80002c4:	72fb      	strb	r3, [r7, #11]
	GPIO_Init(ADC_PORT, &GPIO_InitStructure);
 80002c6:	1d3b      	adds	r3, r7, #4
 80002c8:	4619      	mov	r1, r3
 80002ca:	4838      	ldr	r0, [pc, #224]	; (80003ac <LightSensor_Init1+0x114>)
 80002cc:	f000 fce6 	bl	8000c9c <GPIO_Init>

	/* ADC Deinitialization *****************************************************/
	ADC_DeInit();
 80002d0:	f000 f9e2 	bl	8000698 <ADC_DeInit>

	/* ADC Common Init **********************************************************/
	ADC_CommonInitStructure.ADC_Mode = ADC_Mode_Independent;
 80002d4:	2300      	movs	r3, #0
 80002d6:	64bb      	str	r3, [r7, #72]	; 0x48
	ADC_CommonInitStructure.ADC_Prescaler = ADC_Prescaler_Div2;
 80002d8:	2300      	movs	r3, #0
 80002da:	64fb      	str	r3, [r7, #76]	; 0x4c
	ADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
 80002dc:	2300      	movs	r3, #0
 80002de:	653b      	str	r3, [r7, #80]	; 0x50
	ADC_CommonInitStructure.ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_5Cycles;
 80002e0:	2300      	movs	r3, #0
 80002e2:	657b      	str	r3, [r7, #84]	; 0x54
	ADC_CommonInit(&ADC_CommonInitStructure);
 80002e4:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80002e8:	4618      	mov	r0, r3
 80002ea:	f000 fa39 	bl	8000760 <ADC_CommonInit>

	/* ADC1 Init ****************************************************************/
	ADC_InitStructure.ADC_Resolution = ADC_Resolution_12b;
 80002ee:	2300      	movs	r3, #0
 80002f0:	65bb      	str	r3, [r7, #88]	; 0x58
	ADC_InitStructure.ADC_ScanConvMode = DISABLE;
 80002f2:	2300      	movs	r3, #0
 80002f4:	f887 305c 	strb.w	r3, [r7, #92]	; 0x5c
	ADC_InitStructure.ADC_ContinuousConvMode = ENABLE;
 80002f8:	2301      	movs	r3, #1
 80002fa:	f887 305d 	strb.w	r3, [r7, #93]	; 0x5d
	ADC_InitStructure.ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;
 80002fe:	2300      	movs	r3, #0
 8000300:	663b      	str	r3, [r7, #96]	; 0x60
	ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_CC1;
 8000302:	2300      	movs	r3, #0
 8000304:	667b      	str	r3, [r7, #100]	; 0x64
	ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
 8000306:	2300      	movs	r3, #0
 8000308:	66bb      	str	r3, [r7, #104]	; 0x68
	ADC_InitStructure.ADC_NbrOfConversion = 1;
 800030a:	2301      	movs	r3, #1
 800030c:	f887 306c 	strb.w	r3, [r7, #108]	; 0x6c
	ADC_Init(ADCx_SENSOR, &ADC_InitStructure);
 8000310:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8000314:	4619      	mov	r1, r3
 8000316:	4826      	ldr	r0, [pc, #152]	; (80003b0 <LightSensor_Init1+0x118>)
 8000318:	f000 f9cc 	bl	80006b4 <ADC_Init>

		/* DMA2_Stream0 channel0 configuration **************************************/
	DMA_DeInit(DMA2_Stream0);
 800031c:	4825      	ldr	r0, [pc, #148]	; (80003b4 <LightSensor_Init1+0x11c>)
 800031e:	f000 fb75 	bl	8000a0c <DMA_DeInit>
	DMA_InitStructure.DMA_Channel = DMA_CHANNELx;
 8000322:	2300      	movs	r3, #0
 8000324:	60fb      	str	r3, [r7, #12]
	DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)ADCx_DR_ADDRESS;
 8000326:	4b24      	ldr	r3, [pc, #144]	; (80003b8 <LightSensor_Init1+0x120>)
 8000328:	613b      	str	r3, [r7, #16]
	DMA_InitStructure.DMA_Memory0BaseAddr = (uint32_t)&uhADCConvertedValue;
 800032a:	4b24      	ldr	r3, [pc, #144]	; (80003bc <LightSensor_Init1+0x124>)
 800032c:	617b      	str	r3, [r7, #20]
	DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralToMemory;
 800032e:	2300      	movs	r3, #0
 8000330:	61bb      	str	r3, [r7, #24]
	DMA_InitStructure.DMA_BufferSize = 1;
 8000332:	2301      	movs	r3, #1
 8000334:	61fb      	str	r3, [r7, #28]
	DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
 8000336:	2300      	movs	r3, #0
 8000338:	623b      	str	r3, [r7, #32]
	DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Disable;
 800033a:	2300      	movs	r3, #0
 800033c:	627b      	str	r3, [r7, #36]	; 0x24
	DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_HalfWord;
 800033e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000342:	62bb      	str	r3, [r7, #40]	; 0x28
	DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_HalfWord;
 8000344:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000348:	62fb      	str	r3, [r7, #44]	; 0x2c
	DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
 800034a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800034e:	633b      	str	r3, [r7, #48]	; 0x30
	DMA_InitStructure.DMA_Priority = DMA_Priority_High;
 8000350:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8000354:	637b      	str	r3, [r7, #52]	; 0x34
	DMA_InitStructure.DMA_FIFOMode = DMA_FIFOMode_Disable;
 8000356:	2300      	movs	r3, #0
 8000358:	63bb      	str	r3, [r7, #56]	; 0x38
	DMA_InitStructure.DMA_FIFOThreshold = DMA_FIFOThreshold_HalfFull;
 800035a:	2301      	movs	r3, #1
 800035c:	63fb      	str	r3, [r7, #60]	; 0x3c
	DMA_InitStructure.DMA_MemoryBurst = DMA_MemoryBurst_Single;
 800035e:	2300      	movs	r3, #0
 8000360:	643b      	str	r3, [r7, #64]	; 0x40
	DMA_InitStructure.DMA_PeripheralBurst = DMA_PeripheralBurst_Single;
 8000362:	2300      	movs	r3, #0
 8000364:	647b      	str	r3, [r7, #68]	; 0x44
	DMA_Init(DMA_STREAMx, &DMA_InitStructure);
 8000366:	f107 030c 	add.w	r3, r7, #12
 800036a:	4619      	mov	r1, r3
 800036c:	4811      	ldr	r0, [pc, #68]	; (80003b4 <LightSensor_Init1+0x11c>)
 800036e:	f000 fc21 	bl	8000bb4 <DMA_Init>

		/* DMA2_Stream0 enable */
	DMA_Cmd(DMA_STREAMx, ENABLE);
 8000372:	2101      	movs	r1, #1
 8000374:	480f      	ldr	r0, [pc, #60]	; (80003b4 <LightSensor_Init1+0x11c>)
 8000376:	f000 fc75 	bl	8000c64 <DMA_Cmd>

		/* Enable DMA request after last transfer (Single-ADC mode) */
	ADC_DMARequestAfterLastTransferCmd(ADCx_SENSOR, ENABLE);
 800037a:	2101      	movs	r1, #1
 800037c:	480c      	ldr	r0, [pc, #48]	; (80003b0 <LightSensor_Init1+0x118>)
 800037e:	f000 fb29 	bl	80009d4 <ADC_DMARequestAfterLastTransferCmd>

		/* Enable ADC1 DMA */
	ADC_DMACmd(ADCx_SENSOR, ENABLE);
 8000382:	2101      	movs	r1, #1
 8000384:	480a      	ldr	r0, [pc, #40]	; (80003b0 <LightSensor_Init1+0x118>)
 8000386:	f000 fb09 	bl	800099c <ADC_DMACmd>

	/* ADC1 regular channel15 configuration *************************************/
	ADC_RegularChannelConfig(ADC1, ADC_Channel_15, 1, ADC_SampleTime_15Cycles);
 800038a:	2301      	movs	r3, #1
 800038c:	2201      	movs	r2, #1
 800038e:	210f      	movs	r1, #15
 8000390:	4807      	ldr	r0, [pc, #28]	; (80003b0 <LightSensor_Init1+0x118>)
 8000392:	f000 fa29 	bl	80007e8 <ADC_RegularChannelConfig>

	/* Enable ADC1 */
	ADC_Cmd(ADC1, ENABLE);
 8000396:	2101      	movs	r1, #1
 8000398:	4805      	ldr	r0, [pc, #20]	; (80003b0 <LightSensor_Init1+0x118>)
 800039a:	f000 fa09 	bl	80007b0 <ADC_Cmd>

	/* Start ADC1 Software Conversion */
	ADC_SoftwareStartConv(ADC1);
 800039e:	4804      	ldr	r0, [pc, #16]	; (80003b0 <LightSensor_Init1+0x118>)
 80003a0:	f000 faec 	bl	800097c <ADC_SoftwareStartConv>
}
 80003a4:	bf00      	nop
 80003a6:	3770      	adds	r7, #112	; 0x70
 80003a8:	46bd      	mov	sp, r7
 80003aa:	bd80      	pop	{r7, pc}
 80003ac:	40020800 	.word	0x40020800
 80003b0:	40012000 	.word	0x40012000
 80003b4:	40026410 	.word	0x40026410
 80003b8:	4001204c 	.word	0x4001204c
 80003bc:	20000040 	.word	0x20000040

080003c0 <USART1_Init>:
 * @param  None
 * @retval None
 */
static
void USART1_Init(void)
{
 80003c0:	b580      	push	{r7, lr}
 80003c2:	b086      	sub	sp, #24
 80003c4:	af00      	add	r7, sp, #0
    GPIO_InitTypeDef     GPIO_InitStructure;
    USART_InitTypeDef    USART_InitStructure;

    // Enable GPIO clock -----------------------------------------------------
    RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA,ENABLE);
 80003c6:	2101      	movs	r1, #1
 80003c8:	2001      	movs	r0, #1
 80003ca:	f000 fde7 	bl	8000f9c <RCC_AHB1PeriphClockCmd>

    // Configure USART Tx as alternate function push-pull---------------------
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 80003ce:	2302      	movs	r3, #2
 80003d0:	753b      	strb	r3, [r7, #20]
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
 80003d2:	2303      	movs	r3, #3
 80003d4:	757b      	strb	r3, [r7, #21]
    GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 80003d6:	2300      	movs	r3, #0
 80003d8:	75bb      	strb	r3, [r7, #22]
    GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 80003da:	2301      	movs	r3, #1
 80003dc:	75fb      	strb	r3, [r7, #23]

    GPIO_InitStructure.GPIO_Pin = USART2_TX;
 80003de:	2304      	movs	r3, #4
 80003e0:	613b      	str	r3, [r7, #16]
    GPIO_Init(GPIOA, &GPIO_InitStructure);
 80003e2:	f107 0310 	add.w	r3, r7, #16
 80003e6:	4619      	mov	r1, r3
 80003e8:	4813      	ldr	r0, [pc, #76]	; (8000438 <USART1_Init+0x78>)
 80003ea:	f000 fc57 	bl	8000c9c <GPIO_Init>


    // Connect USART pins-----------------------------------------------------
	GPIO_PinAFConfig(GPIOA, GPIO_PinSource2, GPIO_AF_USART2);
 80003ee:	2207      	movs	r2, #7
 80003f0:	2102      	movs	r1, #2
 80003f2:	4811      	ldr	r0, [pc, #68]	; (8000438 <USART1_Init+0x78>)
 80003f4:	f000 fce0 	bl	8000db8 <GPIO_PinAFConfig>

	// Enable USART clock-----------------------------------------------------
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2,ENABLE);
 80003f8:	2101      	movs	r1, #1
 80003fa:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 80003fe:	f000 fded 	bl	8000fdc <RCC_APB1PeriphClockCmd>

    USART_InitStructure.USART_BaudRate = USART2_Baud;
 8000402:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8000406:	603b      	str	r3, [r7, #0]
    USART_InitStructure.USART_WordLength = USART_WordLength_8b;
 8000408:	2300      	movs	r3, #0
 800040a:	80bb      	strh	r3, [r7, #4]
    USART_InitStructure.USART_StopBits = USART_StopBits_1;
 800040c:	2300      	movs	r3, #0
 800040e:	80fb      	strh	r3, [r7, #6]
    USART_InitStructure.USART_Parity = USART_Parity_No;
 8000410:	2300      	movs	r3, #0
 8000412:	813b      	strh	r3, [r7, #8]
    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 8000414:	2300      	movs	r3, #0
 8000416:	81bb      	strh	r3, [r7, #12]
    USART_InitStructure.USART_Mode = USART_Mode_Tx;
 8000418:	2308      	movs	r3, #8
 800041a:	817b      	strh	r3, [r7, #10]

    USART_Init(USART2, &USART_InitStructure);
 800041c:	463b      	mov	r3, r7
 800041e:	4619      	mov	r1, r3
 8000420:	4806      	ldr	r0, [pc, #24]	; (800043c <USART1_Init+0x7c>)
 8000422:	f000 fe3b 	bl	800109c <USART_Init>

	// Enable USART-----------------------------------------------------------
    USART_Cmd(USART2, ENABLE);
 8000426:	2101      	movs	r1, #1
 8000428:	4804      	ldr	r0, [pc, #16]	; (800043c <USART1_Init+0x7c>)
 800042a:	f000 fef1 	bl	8001210 <USART_Cmd>
}
 800042e:	bf00      	nop
 8000430:	3718      	adds	r7, #24
 8000432:	46bd      	mov	sp, r7
 8000434:	bd80      	pop	{r7, pc}
 8000436:	bf00      	nop
 8000438:	40020000 	.word	0x40020000
 800043c:	40004400 	.word	0x40004400

08000440 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000440:	480d      	ldr	r0, [pc, #52]	; (8000478 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000442:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000444:	f000 f826 	bl	8000494 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000448:	480c      	ldr	r0, [pc, #48]	; (800047c <LoopForever+0x6>)
  ldr r1, =_edata
 800044a:	490d      	ldr	r1, [pc, #52]	; (8000480 <LoopForever+0xa>)
  ldr r2, =_sidata
 800044c:	4a0d      	ldr	r2, [pc, #52]	; (8000484 <LoopForever+0xe>)
  movs r3, #0
 800044e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000450:	e002      	b.n	8000458 <LoopCopyDataInit>

08000452 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000452:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000454:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000456:	3304      	adds	r3, #4

08000458 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000458:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800045a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800045c:	d3f9      	bcc.n	8000452 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800045e:	4a0a      	ldr	r2, [pc, #40]	; (8000488 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000460:	4c0a      	ldr	r4, [pc, #40]	; (800048c <LoopForever+0x16>)
  movs r3, #0
 8000462:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000464:	e001      	b.n	800046a <LoopFillZerobss>

08000466 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000466:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000468:	3204      	adds	r2, #4

0800046a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800046a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800046c:	d3fb      	bcc.n	8000466 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800046e:	f000 ffa3 	bl	80013b8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000472:	f7ff feaf 	bl	80001d4 <main>

08000476 <LoopForever>:

LoopForever:
  b LoopForever
 8000476:	e7fe      	b.n	8000476 <LoopForever>
  ldr   r0, =_estack
 8000478:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 800047c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000480:	20000024 	.word	0x20000024
  ldr r2, =_sidata
 8000484:	08001420 	.word	0x08001420
  ldr r2, =_sbss
 8000488:	20000024 	.word	0x20000024
  ldr r4, =_ebss
 800048c:	200001d0 	.word	0x200001d0

08000490 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000490:	e7fe      	b.n	8000490 <ADC_IRQHandler>
	...

08000494 <SystemInit>:
 8000494:	b580      	push	{r7, lr}
 8000496:	af00      	add	r7, sp, #0
 8000498:	4b16      	ldr	r3, [pc, #88]	; (80004f4 <SystemInit+0x60>)
 800049a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800049e:	4a15      	ldr	r2, [pc, #84]	; (80004f4 <SystemInit+0x60>)
 80004a0:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80004a4:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80004a8:	4b13      	ldr	r3, [pc, #76]	; (80004f8 <SystemInit+0x64>)
 80004aa:	681b      	ldr	r3, [r3, #0]
 80004ac:	4a12      	ldr	r2, [pc, #72]	; (80004f8 <SystemInit+0x64>)
 80004ae:	f043 0301 	orr.w	r3, r3, #1
 80004b2:	6013      	str	r3, [r2, #0]
 80004b4:	4b10      	ldr	r3, [pc, #64]	; (80004f8 <SystemInit+0x64>)
 80004b6:	2200      	movs	r2, #0
 80004b8:	609a      	str	r2, [r3, #8]
 80004ba:	4b0f      	ldr	r3, [pc, #60]	; (80004f8 <SystemInit+0x64>)
 80004bc:	681b      	ldr	r3, [r3, #0]
 80004be:	4a0e      	ldr	r2, [pc, #56]	; (80004f8 <SystemInit+0x64>)
 80004c0:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 80004c4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80004c8:	6013      	str	r3, [r2, #0]
 80004ca:	4b0b      	ldr	r3, [pc, #44]	; (80004f8 <SystemInit+0x64>)
 80004cc:	4a0b      	ldr	r2, [pc, #44]	; (80004fc <SystemInit+0x68>)
 80004ce:	605a      	str	r2, [r3, #4]
 80004d0:	4b09      	ldr	r3, [pc, #36]	; (80004f8 <SystemInit+0x64>)
 80004d2:	681b      	ldr	r3, [r3, #0]
 80004d4:	4a08      	ldr	r2, [pc, #32]	; (80004f8 <SystemInit+0x64>)
 80004d6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80004da:	6013      	str	r3, [r2, #0]
 80004dc:	4b06      	ldr	r3, [pc, #24]	; (80004f8 <SystemInit+0x64>)
 80004de:	2200      	movs	r2, #0
 80004e0:	60da      	str	r2, [r3, #12]
 80004e2:	f000 f889 	bl	80005f8 <SetSysClock>
 80004e6:	4b03      	ldr	r3, [pc, #12]	; (80004f4 <SystemInit+0x60>)
 80004e8:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80004ec:	609a      	str	r2, [r3, #8]
 80004ee:	bf00      	nop
 80004f0:	bd80      	pop	{r7, pc}
 80004f2:	bf00      	nop
 80004f4:	e000ed00 	.word	0xe000ed00
 80004f8:	40023800 	.word	0x40023800
 80004fc:	24003010 	.word	0x24003010

08000500 <SystemCoreClockUpdate>:
 8000500:	b480      	push	{r7}
 8000502:	b087      	sub	sp, #28
 8000504:	af00      	add	r7, sp, #0
 8000506:	2300      	movs	r3, #0
 8000508:	613b      	str	r3, [r7, #16]
 800050a:	2300      	movs	r3, #0
 800050c:	617b      	str	r3, [r7, #20]
 800050e:	2302      	movs	r3, #2
 8000510:	60fb      	str	r3, [r7, #12]
 8000512:	2300      	movs	r3, #0
 8000514:	60bb      	str	r3, [r7, #8]
 8000516:	2302      	movs	r3, #2
 8000518:	607b      	str	r3, [r7, #4]
 800051a:	4b32      	ldr	r3, [pc, #200]	; (80005e4 <SystemCoreClockUpdate+0xe4>)
 800051c:	689b      	ldr	r3, [r3, #8]
 800051e:	f003 030c 	and.w	r3, r3, #12
 8000522:	613b      	str	r3, [r7, #16]
 8000524:	693b      	ldr	r3, [r7, #16]
 8000526:	2b04      	cmp	r3, #4
 8000528:	d007      	beq.n	800053a <SystemCoreClockUpdate+0x3a>
 800052a:	2b08      	cmp	r3, #8
 800052c:	d009      	beq.n	8000542 <SystemCoreClockUpdate+0x42>
 800052e:	2b00      	cmp	r3, #0
 8000530:	d13d      	bne.n	80005ae <SystemCoreClockUpdate+0xae>
 8000532:	4b2d      	ldr	r3, [pc, #180]	; (80005e8 <SystemCoreClockUpdate+0xe8>)
 8000534:	4a2d      	ldr	r2, [pc, #180]	; (80005ec <SystemCoreClockUpdate+0xec>)
 8000536:	601a      	str	r2, [r3, #0]
 8000538:	e03d      	b.n	80005b6 <SystemCoreClockUpdate+0xb6>
 800053a:	4b2b      	ldr	r3, [pc, #172]	; (80005e8 <SystemCoreClockUpdate+0xe8>)
 800053c:	4a2c      	ldr	r2, [pc, #176]	; (80005f0 <SystemCoreClockUpdate+0xf0>)
 800053e:	601a      	str	r2, [r3, #0]
 8000540:	e039      	b.n	80005b6 <SystemCoreClockUpdate+0xb6>
 8000542:	4b28      	ldr	r3, [pc, #160]	; (80005e4 <SystemCoreClockUpdate+0xe4>)
 8000544:	685b      	ldr	r3, [r3, #4]
 8000546:	0d9b      	lsrs	r3, r3, #22
 8000548:	f003 0301 	and.w	r3, r3, #1
 800054c:	60bb      	str	r3, [r7, #8]
 800054e:	4b25      	ldr	r3, [pc, #148]	; (80005e4 <SystemCoreClockUpdate+0xe4>)
 8000550:	685b      	ldr	r3, [r3, #4]
 8000552:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8000556:	607b      	str	r3, [r7, #4]
 8000558:	68bb      	ldr	r3, [r7, #8]
 800055a:	2b00      	cmp	r3, #0
 800055c:	d00c      	beq.n	8000578 <SystemCoreClockUpdate+0x78>
 800055e:	4a24      	ldr	r2, [pc, #144]	; (80005f0 <SystemCoreClockUpdate+0xf0>)
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	fbb2 f3f3 	udiv	r3, r2, r3
 8000566:	4a1f      	ldr	r2, [pc, #124]	; (80005e4 <SystemCoreClockUpdate+0xe4>)
 8000568:	6852      	ldr	r2, [r2, #4]
 800056a:	0992      	lsrs	r2, r2, #6
 800056c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000570:	fb02 f303 	mul.w	r3, r2, r3
 8000574:	617b      	str	r3, [r7, #20]
 8000576:	e00b      	b.n	8000590 <SystemCoreClockUpdate+0x90>
 8000578:	4a1c      	ldr	r2, [pc, #112]	; (80005ec <SystemCoreClockUpdate+0xec>)
 800057a:	687b      	ldr	r3, [r7, #4]
 800057c:	fbb2 f3f3 	udiv	r3, r2, r3
 8000580:	4a18      	ldr	r2, [pc, #96]	; (80005e4 <SystemCoreClockUpdate+0xe4>)
 8000582:	6852      	ldr	r2, [r2, #4]
 8000584:	0992      	lsrs	r2, r2, #6
 8000586:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800058a:	fb02 f303 	mul.w	r3, r2, r3
 800058e:	617b      	str	r3, [r7, #20]
 8000590:	4b14      	ldr	r3, [pc, #80]	; (80005e4 <SystemCoreClockUpdate+0xe4>)
 8000592:	685b      	ldr	r3, [r3, #4]
 8000594:	0c1b      	lsrs	r3, r3, #16
 8000596:	f003 0303 	and.w	r3, r3, #3
 800059a:	3301      	adds	r3, #1
 800059c:	005b      	lsls	r3, r3, #1
 800059e:	60fb      	str	r3, [r7, #12]
 80005a0:	697a      	ldr	r2, [r7, #20]
 80005a2:	68fb      	ldr	r3, [r7, #12]
 80005a4:	fbb2 f3f3 	udiv	r3, r2, r3
 80005a8:	4a0f      	ldr	r2, [pc, #60]	; (80005e8 <SystemCoreClockUpdate+0xe8>)
 80005aa:	6013      	str	r3, [r2, #0]
 80005ac:	e003      	b.n	80005b6 <SystemCoreClockUpdate+0xb6>
 80005ae:	4b0e      	ldr	r3, [pc, #56]	; (80005e8 <SystemCoreClockUpdate+0xe8>)
 80005b0:	4a0e      	ldr	r2, [pc, #56]	; (80005ec <SystemCoreClockUpdate+0xec>)
 80005b2:	601a      	str	r2, [r3, #0]
 80005b4:	bf00      	nop
 80005b6:	4b0b      	ldr	r3, [pc, #44]	; (80005e4 <SystemCoreClockUpdate+0xe4>)
 80005b8:	689b      	ldr	r3, [r3, #8]
 80005ba:	091b      	lsrs	r3, r3, #4
 80005bc:	f003 030f 	and.w	r3, r3, #15
 80005c0:	4a0c      	ldr	r2, [pc, #48]	; (80005f4 <SystemCoreClockUpdate+0xf4>)
 80005c2:	5cd3      	ldrb	r3, [r2, r3]
 80005c4:	b2db      	uxtb	r3, r3
 80005c6:	613b      	str	r3, [r7, #16]
 80005c8:	4b07      	ldr	r3, [pc, #28]	; (80005e8 <SystemCoreClockUpdate+0xe8>)
 80005ca:	681a      	ldr	r2, [r3, #0]
 80005cc:	693b      	ldr	r3, [r7, #16]
 80005ce:	fa22 f303 	lsr.w	r3, r2, r3
 80005d2:	4a05      	ldr	r2, [pc, #20]	; (80005e8 <SystemCoreClockUpdate+0xe8>)
 80005d4:	6013      	str	r3, [r2, #0]
 80005d6:	bf00      	nop
 80005d8:	371c      	adds	r7, #28
 80005da:	46bd      	mov	sp, r7
 80005dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005e0:	4770      	bx	lr
 80005e2:	bf00      	nop
 80005e4:	40023800 	.word	0x40023800
 80005e8:	20000000 	.word	0x20000000
 80005ec:	00f42400 	.word	0x00f42400
 80005f0:	017d7840 	.word	0x017d7840
 80005f4:	20000004 	.word	0x20000004

080005f8 <SetSysClock>:
 80005f8:	b480      	push	{r7}
 80005fa:	af00      	add	r7, sp, #0
 80005fc:	4b22      	ldr	r3, [pc, #136]	; (8000688 <SetSysClock+0x90>)
 80005fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000600:	4a21      	ldr	r2, [pc, #132]	; (8000688 <SetSysClock+0x90>)
 8000602:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000606:	6413      	str	r3, [r2, #64]	; 0x40
 8000608:	4b20      	ldr	r3, [pc, #128]	; (800068c <SetSysClock+0x94>)
 800060a:	681b      	ldr	r3, [r3, #0]
 800060c:	4a1f      	ldr	r2, [pc, #124]	; (800068c <SetSysClock+0x94>)
 800060e:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8000612:	6013      	str	r3, [r2, #0]
 8000614:	4b1c      	ldr	r3, [pc, #112]	; (8000688 <SetSysClock+0x90>)
 8000616:	4a1c      	ldr	r2, [pc, #112]	; (8000688 <SetSysClock+0x90>)
 8000618:	689b      	ldr	r3, [r3, #8]
 800061a:	6093      	str	r3, [r2, #8]
 800061c:	4b1a      	ldr	r3, [pc, #104]	; (8000688 <SetSysClock+0x90>)
 800061e:	4a1a      	ldr	r2, [pc, #104]	; (8000688 <SetSysClock+0x90>)
 8000620:	689b      	ldr	r3, [r3, #8]
 8000622:	6093      	str	r3, [r2, #8]
 8000624:	4b18      	ldr	r3, [pc, #96]	; (8000688 <SetSysClock+0x90>)
 8000626:	689b      	ldr	r3, [r3, #8]
 8000628:	4a17      	ldr	r2, [pc, #92]	; (8000688 <SetSysClock+0x90>)
 800062a:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800062e:	6093      	str	r3, [r2, #8]
 8000630:	4b15      	ldr	r3, [pc, #84]	; (8000688 <SetSysClock+0x90>)
 8000632:	4a17      	ldr	r2, [pc, #92]	; (8000690 <SetSysClock+0x98>)
 8000634:	605a      	str	r2, [r3, #4]
 8000636:	4b14      	ldr	r3, [pc, #80]	; (8000688 <SetSysClock+0x90>)
 8000638:	681b      	ldr	r3, [r3, #0]
 800063a:	4a13      	ldr	r2, [pc, #76]	; (8000688 <SetSysClock+0x90>)
 800063c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000640:	6013      	str	r3, [r2, #0]
 8000642:	bf00      	nop
 8000644:	4b10      	ldr	r3, [pc, #64]	; (8000688 <SetSysClock+0x90>)
 8000646:	681b      	ldr	r3, [r3, #0]
 8000648:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800064c:	2b00      	cmp	r3, #0
 800064e:	d0f9      	beq.n	8000644 <SetSysClock+0x4c>
 8000650:	4b10      	ldr	r3, [pc, #64]	; (8000694 <SetSysClock+0x9c>)
 8000652:	f240 6202 	movw	r2, #1538	; 0x602
 8000656:	601a      	str	r2, [r3, #0]
 8000658:	4b0b      	ldr	r3, [pc, #44]	; (8000688 <SetSysClock+0x90>)
 800065a:	689b      	ldr	r3, [r3, #8]
 800065c:	4a0a      	ldr	r2, [pc, #40]	; (8000688 <SetSysClock+0x90>)
 800065e:	f023 0303 	bic.w	r3, r3, #3
 8000662:	6093      	str	r3, [r2, #8]
 8000664:	4b08      	ldr	r3, [pc, #32]	; (8000688 <SetSysClock+0x90>)
 8000666:	689b      	ldr	r3, [r3, #8]
 8000668:	4a07      	ldr	r2, [pc, #28]	; (8000688 <SetSysClock+0x90>)
 800066a:	f043 0302 	orr.w	r3, r3, #2
 800066e:	6093      	str	r3, [r2, #8]
 8000670:	bf00      	nop
 8000672:	4b05      	ldr	r3, [pc, #20]	; (8000688 <SetSysClock+0x90>)
 8000674:	689b      	ldr	r3, [r3, #8]
 8000676:	f003 030c 	and.w	r3, r3, #12
 800067a:	2b08      	cmp	r3, #8
 800067c:	d1f9      	bne.n	8000672 <SetSysClock+0x7a>
 800067e:	bf00      	nop
 8000680:	46bd      	mov	sp, r7
 8000682:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000686:	4770      	bx	lr
 8000688:	40023800 	.word	0x40023800
 800068c:	40007000 	.word	0x40007000
 8000690:	08015410 	.word	0x08015410
 8000694:	40023c00 	.word	0x40023c00

08000698 <ADC_DeInit>:
 8000698:	b580      	push	{r7, lr}
 800069a:	af00      	add	r7, sp, #0
 800069c:	2101      	movs	r1, #1
 800069e:	f44f 7080 	mov.w	r0, #256	; 0x100
 80006a2:	f000 fcdb 	bl	800105c <RCC_APB2PeriphResetCmd>
 80006a6:	2100      	movs	r1, #0
 80006a8:	f44f 7080 	mov.w	r0, #256	; 0x100
 80006ac:	f000 fcd6 	bl	800105c <RCC_APB2PeriphResetCmd>
 80006b0:	bf00      	nop
 80006b2:	bd80      	pop	{r7, pc}

080006b4 <ADC_Init>:
 80006b4:	b480      	push	{r7}
 80006b6:	b085      	sub	sp, #20
 80006b8:	af00      	add	r7, sp, #0
 80006ba:	6078      	str	r0, [r7, #4]
 80006bc:	6039      	str	r1, [r7, #0]
 80006be:	2300      	movs	r3, #0
 80006c0:	60fb      	str	r3, [r7, #12]
 80006c2:	2300      	movs	r3, #0
 80006c4:	72fb      	strb	r3, [r7, #11]
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	685b      	ldr	r3, [r3, #4]
 80006ca:	60fb      	str	r3, [r7, #12]
 80006cc:	68fb      	ldr	r3, [r7, #12]
 80006ce:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 80006d2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80006d6:	60fb      	str	r3, [r7, #12]
 80006d8:	683b      	ldr	r3, [r7, #0]
 80006da:	791b      	ldrb	r3, [r3, #4]
 80006dc:	021a      	lsls	r2, r3, #8
 80006de:	683b      	ldr	r3, [r7, #0]
 80006e0:	681b      	ldr	r3, [r3, #0]
 80006e2:	4313      	orrs	r3, r2
 80006e4:	68fa      	ldr	r2, [r7, #12]
 80006e6:	4313      	orrs	r3, r2
 80006e8:	60fb      	str	r3, [r7, #12]
 80006ea:	687b      	ldr	r3, [r7, #4]
 80006ec:	68fa      	ldr	r2, [r7, #12]
 80006ee:	605a      	str	r2, [r3, #4]
 80006f0:	687b      	ldr	r3, [r7, #4]
 80006f2:	689b      	ldr	r3, [r3, #8]
 80006f4:	60fb      	str	r3, [r7, #12]
 80006f6:	68fa      	ldr	r2, [r7, #12]
 80006f8:	4b18      	ldr	r3, [pc, #96]	; (800075c <ADC_Init+0xa8>)
 80006fa:	4013      	ands	r3, r2
 80006fc:	60fb      	str	r3, [r7, #12]
 80006fe:	683b      	ldr	r3, [r7, #0]
 8000700:	691a      	ldr	r2, [r3, #16]
 8000702:	683b      	ldr	r3, [r7, #0]
 8000704:	68db      	ldr	r3, [r3, #12]
 8000706:	431a      	orrs	r2, r3
 8000708:	683b      	ldr	r3, [r7, #0]
 800070a:	689b      	ldr	r3, [r3, #8]
 800070c:	431a      	orrs	r2, r3
 800070e:	683b      	ldr	r3, [r7, #0]
 8000710:	795b      	ldrb	r3, [r3, #5]
 8000712:	005b      	lsls	r3, r3, #1
 8000714:	4313      	orrs	r3, r2
 8000716:	68fa      	ldr	r2, [r7, #12]
 8000718:	4313      	orrs	r3, r2
 800071a:	60fb      	str	r3, [r7, #12]
 800071c:	687b      	ldr	r3, [r7, #4]
 800071e:	68fa      	ldr	r2, [r7, #12]
 8000720:	609a      	str	r2, [r3, #8]
 8000722:	687b      	ldr	r3, [r7, #4]
 8000724:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000726:	60fb      	str	r3, [r7, #12]
 8000728:	68fb      	ldr	r3, [r7, #12]
 800072a:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800072e:	60fb      	str	r3, [r7, #12]
 8000730:	683b      	ldr	r3, [r7, #0]
 8000732:	7d1b      	ldrb	r3, [r3, #20]
 8000734:	3b01      	subs	r3, #1
 8000736:	b2da      	uxtb	r2, r3
 8000738:	7afb      	ldrb	r3, [r7, #11]
 800073a:	4313      	orrs	r3, r2
 800073c:	72fb      	strb	r3, [r7, #11]
 800073e:	7afb      	ldrb	r3, [r7, #11]
 8000740:	051b      	lsls	r3, r3, #20
 8000742:	68fa      	ldr	r2, [r7, #12]
 8000744:	4313      	orrs	r3, r2
 8000746:	60fb      	str	r3, [r7, #12]
 8000748:	687b      	ldr	r3, [r7, #4]
 800074a:	68fa      	ldr	r2, [r7, #12]
 800074c:	62da      	str	r2, [r3, #44]	; 0x2c
 800074e:	bf00      	nop
 8000750:	3714      	adds	r7, #20
 8000752:	46bd      	mov	sp, r7
 8000754:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000758:	4770      	bx	lr
 800075a:	bf00      	nop
 800075c:	c0fff7fd 	.word	0xc0fff7fd

08000760 <ADC_CommonInit>:
 8000760:	b480      	push	{r7}
 8000762:	b085      	sub	sp, #20
 8000764:	af00      	add	r7, sp, #0
 8000766:	6078      	str	r0, [r7, #4]
 8000768:	2300      	movs	r3, #0
 800076a:	60fb      	str	r3, [r7, #12]
 800076c:	4b0e      	ldr	r3, [pc, #56]	; (80007a8 <ADC_CommonInit+0x48>)
 800076e:	685b      	ldr	r3, [r3, #4]
 8000770:	60fb      	str	r3, [r7, #12]
 8000772:	68fa      	ldr	r2, [r7, #12]
 8000774:	4b0d      	ldr	r3, [pc, #52]	; (80007ac <ADC_CommonInit+0x4c>)
 8000776:	4013      	ands	r3, r2
 8000778:	60fb      	str	r3, [r7, #12]
 800077a:	687b      	ldr	r3, [r7, #4]
 800077c:	681a      	ldr	r2, [r3, #0]
 800077e:	687b      	ldr	r3, [r7, #4]
 8000780:	685b      	ldr	r3, [r3, #4]
 8000782:	431a      	orrs	r2, r3
 8000784:	687b      	ldr	r3, [r7, #4]
 8000786:	689b      	ldr	r3, [r3, #8]
 8000788:	431a      	orrs	r2, r3
 800078a:	687b      	ldr	r3, [r7, #4]
 800078c:	68db      	ldr	r3, [r3, #12]
 800078e:	4313      	orrs	r3, r2
 8000790:	68fa      	ldr	r2, [r7, #12]
 8000792:	4313      	orrs	r3, r2
 8000794:	60fb      	str	r3, [r7, #12]
 8000796:	4a04      	ldr	r2, [pc, #16]	; (80007a8 <ADC_CommonInit+0x48>)
 8000798:	68fb      	ldr	r3, [r7, #12]
 800079a:	6053      	str	r3, [r2, #4]
 800079c:	bf00      	nop
 800079e:	3714      	adds	r7, #20
 80007a0:	46bd      	mov	sp, r7
 80007a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007a6:	4770      	bx	lr
 80007a8:	40012300 	.word	0x40012300
 80007ac:	fffc30e0 	.word	0xfffc30e0

080007b0 <ADC_Cmd>:
 80007b0:	b480      	push	{r7}
 80007b2:	b083      	sub	sp, #12
 80007b4:	af00      	add	r7, sp, #0
 80007b6:	6078      	str	r0, [r7, #4]
 80007b8:	460b      	mov	r3, r1
 80007ba:	70fb      	strb	r3, [r7, #3]
 80007bc:	78fb      	ldrb	r3, [r7, #3]
 80007be:	2b00      	cmp	r3, #0
 80007c0:	d006      	beq.n	80007d0 <ADC_Cmd+0x20>
 80007c2:	687b      	ldr	r3, [r7, #4]
 80007c4:	689b      	ldr	r3, [r3, #8]
 80007c6:	f043 0201 	orr.w	r2, r3, #1
 80007ca:	687b      	ldr	r3, [r7, #4]
 80007cc:	609a      	str	r2, [r3, #8]
 80007ce:	e005      	b.n	80007dc <ADC_Cmd+0x2c>
 80007d0:	687b      	ldr	r3, [r7, #4]
 80007d2:	689b      	ldr	r3, [r3, #8]
 80007d4:	f023 0201 	bic.w	r2, r3, #1
 80007d8:	687b      	ldr	r3, [r7, #4]
 80007da:	609a      	str	r2, [r3, #8]
 80007dc:	bf00      	nop
 80007de:	370c      	adds	r7, #12
 80007e0:	46bd      	mov	sp, r7
 80007e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007e6:	4770      	bx	lr

080007e8 <ADC_RegularChannelConfig>:
 80007e8:	b480      	push	{r7}
 80007ea:	b085      	sub	sp, #20
 80007ec:	af00      	add	r7, sp, #0
 80007ee:	6078      	str	r0, [r7, #4]
 80007f0:	4608      	mov	r0, r1
 80007f2:	4611      	mov	r1, r2
 80007f4:	461a      	mov	r2, r3
 80007f6:	4603      	mov	r3, r0
 80007f8:	70fb      	strb	r3, [r7, #3]
 80007fa:	460b      	mov	r3, r1
 80007fc:	70bb      	strb	r3, [r7, #2]
 80007fe:	4613      	mov	r3, r2
 8000800:	707b      	strb	r3, [r7, #1]
 8000802:	2300      	movs	r3, #0
 8000804:	60fb      	str	r3, [r7, #12]
 8000806:	2300      	movs	r3, #0
 8000808:	60bb      	str	r3, [r7, #8]
 800080a:	78fb      	ldrb	r3, [r7, #3]
 800080c:	2b09      	cmp	r3, #9
 800080e:	d923      	bls.n	8000858 <ADC_RegularChannelConfig+0x70>
 8000810:	687b      	ldr	r3, [r7, #4]
 8000812:	68db      	ldr	r3, [r3, #12]
 8000814:	60fb      	str	r3, [r7, #12]
 8000816:	78fb      	ldrb	r3, [r7, #3]
 8000818:	f1a3 020a 	sub.w	r2, r3, #10
 800081c:	4613      	mov	r3, r2
 800081e:	005b      	lsls	r3, r3, #1
 8000820:	4413      	add	r3, r2
 8000822:	2207      	movs	r2, #7
 8000824:	fa02 f303 	lsl.w	r3, r2, r3
 8000828:	60bb      	str	r3, [r7, #8]
 800082a:	68bb      	ldr	r3, [r7, #8]
 800082c:	43db      	mvns	r3, r3
 800082e:	68fa      	ldr	r2, [r7, #12]
 8000830:	4013      	ands	r3, r2
 8000832:	60fb      	str	r3, [r7, #12]
 8000834:	7879      	ldrb	r1, [r7, #1]
 8000836:	78fb      	ldrb	r3, [r7, #3]
 8000838:	f1a3 020a 	sub.w	r2, r3, #10
 800083c:	4613      	mov	r3, r2
 800083e:	005b      	lsls	r3, r3, #1
 8000840:	4413      	add	r3, r2
 8000842:	fa01 f303 	lsl.w	r3, r1, r3
 8000846:	60bb      	str	r3, [r7, #8]
 8000848:	68fa      	ldr	r2, [r7, #12]
 800084a:	68bb      	ldr	r3, [r7, #8]
 800084c:	4313      	orrs	r3, r2
 800084e:	60fb      	str	r3, [r7, #12]
 8000850:	687b      	ldr	r3, [r7, #4]
 8000852:	68fa      	ldr	r2, [r7, #12]
 8000854:	60da      	str	r2, [r3, #12]
 8000856:	e01e      	b.n	8000896 <ADC_RegularChannelConfig+0xae>
 8000858:	687b      	ldr	r3, [r7, #4]
 800085a:	691b      	ldr	r3, [r3, #16]
 800085c:	60fb      	str	r3, [r7, #12]
 800085e:	78fa      	ldrb	r2, [r7, #3]
 8000860:	4613      	mov	r3, r2
 8000862:	005b      	lsls	r3, r3, #1
 8000864:	4413      	add	r3, r2
 8000866:	2207      	movs	r2, #7
 8000868:	fa02 f303 	lsl.w	r3, r2, r3
 800086c:	60bb      	str	r3, [r7, #8]
 800086e:	68bb      	ldr	r3, [r7, #8]
 8000870:	43db      	mvns	r3, r3
 8000872:	68fa      	ldr	r2, [r7, #12]
 8000874:	4013      	ands	r3, r2
 8000876:	60fb      	str	r3, [r7, #12]
 8000878:	7879      	ldrb	r1, [r7, #1]
 800087a:	78fa      	ldrb	r2, [r7, #3]
 800087c:	4613      	mov	r3, r2
 800087e:	005b      	lsls	r3, r3, #1
 8000880:	4413      	add	r3, r2
 8000882:	fa01 f303 	lsl.w	r3, r1, r3
 8000886:	60bb      	str	r3, [r7, #8]
 8000888:	68fa      	ldr	r2, [r7, #12]
 800088a:	68bb      	ldr	r3, [r7, #8]
 800088c:	4313      	orrs	r3, r2
 800088e:	60fb      	str	r3, [r7, #12]
 8000890:	687b      	ldr	r3, [r7, #4]
 8000892:	68fa      	ldr	r2, [r7, #12]
 8000894:	611a      	str	r2, [r3, #16]
 8000896:	78bb      	ldrb	r3, [r7, #2]
 8000898:	2b06      	cmp	r3, #6
 800089a:	d821      	bhi.n	80008e0 <ADC_RegularChannelConfig+0xf8>
 800089c:	687b      	ldr	r3, [r7, #4]
 800089e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80008a0:	60fb      	str	r3, [r7, #12]
 80008a2:	78bb      	ldrb	r3, [r7, #2]
 80008a4:	1e5a      	subs	r2, r3, #1
 80008a6:	4613      	mov	r3, r2
 80008a8:	009b      	lsls	r3, r3, #2
 80008aa:	4413      	add	r3, r2
 80008ac:	221f      	movs	r2, #31
 80008ae:	fa02 f303 	lsl.w	r3, r2, r3
 80008b2:	60bb      	str	r3, [r7, #8]
 80008b4:	68bb      	ldr	r3, [r7, #8]
 80008b6:	43db      	mvns	r3, r3
 80008b8:	68fa      	ldr	r2, [r7, #12]
 80008ba:	4013      	ands	r3, r2
 80008bc:	60fb      	str	r3, [r7, #12]
 80008be:	78f9      	ldrb	r1, [r7, #3]
 80008c0:	78bb      	ldrb	r3, [r7, #2]
 80008c2:	1e5a      	subs	r2, r3, #1
 80008c4:	4613      	mov	r3, r2
 80008c6:	009b      	lsls	r3, r3, #2
 80008c8:	4413      	add	r3, r2
 80008ca:	fa01 f303 	lsl.w	r3, r1, r3
 80008ce:	60bb      	str	r3, [r7, #8]
 80008d0:	68fa      	ldr	r2, [r7, #12]
 80008d2:	68bb      	ldr	r3, [r7, #8]
 80008d4:	4313      	orrs	r3, r2
 80008d6:	60fb      	str	r3, [r7, #12]
 80008d8:	687b      	ldr	r3, [r7, #4]
 80008da:	68fa      	ldr	r2, [r7, #12]
 80008dc:	635a      	str	r2, [r3, #52]	; 0x34
 80008de:	e047      	b.n	8000970 <ADC_RegularChannelConfig+0x188>
 80008e0:	78bb      	ldrb	r3, [r7, #2]
 80008e2:	2b0c      	cmp	r3, #12
 80008e4:	d821      	bhi.n	800092a <ADC_RegularChannelConfig+0x142>
 80008e6:	687b      	ldr	r3, [r7, #4]
 80008e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80008ea:	60fb      	str	r3, [r7, #12]
 80008ec:	78bb      	ldrb	r3, [r7, #2]
 80008ee:	1fda      	subs	r2, r3, #7
 80008f0:	4613      	mov	r3, r2
 80008f2:	009b      	lsls	r3, r3, #2
 80008f4:	4413      	add	r3, r2
 80008f6:	221f      	movs	r2, #31
 80008f8:	fa02 f303 	lsl.w	r3, r2, r3
 80008fc:	60bb      	str	r3, [r7, #8]
 80008fe:	68bb      	ldr	r3, [r7, #8]
 8000900:	43db      	mvns	r3, r3
 8000902:	68fa      	ldr	r2, [r7, #12]
 8000904:	4013      	ands	r3, r2
 8000906:	60fb      	str	r3, [r7, #12]
 8000908:	78f9      	ldrb	r1, [r7, #3]
 800090a:	78bb      	ldrb	r3, [r7, #2]
 800090c:	1fda      	subs	r2, r3, #7
 800090e:	4613      	mov	r3, r2
 8000910:	009b      	lsls	r3, r3, #2
 8000912:	4413      	add	r3, r2
 8000914:	fa01 f303 	lsl.w	r3, r1, r3
 8000918:	60bb      	str	r3, [r7, #8]
 800091a:	68fa      	ldr	r2, [r7, #12]
 800091c:	68bb      	ldr	r3, [r7, #8]
 800091e:	4313      	orrs	r3, r2
 8000920:	60fb      	str	r3, [r7, #12]
 8000922:	687b      	ldr	r3, [r7, #4]
 8000924:	68fa      	ldr	r2, [r7, #12]
 8000926:	631a      	str	r2, [r3, #48]	; 0x30
 8000928:	e022      	b.n	8000970 <ADC_RegularChannelConfig+0x188>
 800092a:	687b      	ldr	r3, [r7, #4]
 800092c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800092e:	60fb      	str	r3, [r7, #12]
 8000930:	78bb      	ldrb	r3, [r7, #2]
 8000932:	f1a3 020d 	sub.w	r2, r3, #13
 8000936:	4613      	mov	r3, r2
 8000938:	009b      	lsls	r3, r3, #2
 800093a:	4413      	add	r3, r2
 800093c:	221f      	movs	r2, #31
 800093e:	fa02 f303 	lsl.w	r3, r2, r3
 8000942:	60bb      	str	r3, [r7, #8]
 8000944:	68bb      	ldr	r3, [r7, #8]
 8000946:	43db      	mvns	r3, r3
 8000948:	68fa      	ldr	r2, [r7, #12]
 800094a:	4013      	ands	r3, r2
 800094c:	60fb      	str	r3, [r7, #12]
 800094e:	78f9      	ldrb	r1, [r7, #3]
 8000950:	78bb      	ldrb	r3, [r7, #2]
 8000952:	f1a3 020d 	sub.w	r2, r3, #13
 8000956:	4613      	mov	r3, r2
 8000958:	009b      	lsls	r3, r3, #2
 800095a:	4413      	add	r3, r2
 800095c:	fa01 f303 	lsl.w	r3, r1, r3
 8000960:	60bb      	str	r3, [r7, #8]
 8000962:	68fa      	ldr	r2, [r7, #12]
 8000964:	68bb      	ldr	r3, [r7, #8]
 8000966:	4313      	orrs	r3, r2
 8000968:	60fb      	str	r3, [r7, #12]
 800096a:	687b      	ldr	r3, [r7, #4]
 800096c:	68fa      	ldr	r2, [r7, #12]
 800096e:	62da      	str	r2, [r3, #44]	; 0x2c
 8000970:	bf00      	nop
 8000972:	3714      	adds	r7, #20
 8000974:	46bd      	mov	sp, r7
 8000976:	f85d 7b04 	ldr.w	r7, [sp], #4
 800097a:	4770      	bx	lr

0800097c <ADC_SoftwareStartConv>:
 800097c:	b480      	push	{r7}
 800097e:	b083      	sub	sp, #12
 8000980:	af00      	add	r7, sp, #0
 8000982:	6078      	str	r0, [r7, #4]
 8000984:	687b      	ldr	r3, [r7, #4]
 8000986:	689b      	ldr	r3, [r3, #8]
 8000988:	f043 4280 	orr.w	r2, r3, #1073741824	; 0x40000000
 800098c:	687b      	ldr	r3, [r7, #4]
 800098e:	609a      	str	r2, [r3, #8]
 8000990:	bf00      	nop
 8000992:	370c      	adds	r7, #12
 8000994:	46bd      	mov	sp, r7
 8000996:	f85d 7b04 	ldr.w	r7, [sp], #4
 800099a:	4770      	bx	lr

0800099c <ADC_DMACmd>:
 800099c:	b480      	push	{r7}
 800099e:	b083      	sub	sp, #12
 80009a0:	af00      	add	r7, sp, #0
 80009a2:	6078      	str	r0, [r7, #4]
 80009a4:	460b      	mov	r3, r1
 80009a6:	70fb      	strb	r3, [r7, #3]
 80009a8:	78fb      	ldrb	r3, [r7, #3]
 80009aa:	2b00      	cmp	r3, #0
 80009ac:	d006      	beq.n	80009bc <ADC_DMACmd+0x20>
 80009ae:	687b      	ldr	r3, [r7, #4]
 80009b0:	689b      	ldr	r3, [r3, #8]
 80009b2:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 80009b6:	687b      	ldr	r3, [r7, #4]
 80009b8:	609a      	str	r2, [r3, #8]
 80009ba:	e005      	b.n	80009c8 <ADC_DMACmd+0x2c>
 80009bc:	687b      	ldr	r3, [r7, #4]
 80009be:	689b      	ldr	r3, [r3, #8]
 80009c0:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80009c4:	687b      	ldr	r3, [r7, #4]
 80009c6:	609a      	str	r2, [r3, #8]
 80009c8:	bf00      	nop
 80009ca:	370c      	adds	r7, #12
 80009cc:	46bd      	mov	sp, r7
 80009ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009d2:	4770      	bx	lr

080009d4 <ADC_DMARequestAfterLastTransferCmd>:
 80009d4:	b480      	push	{r7}
 80009d6:	b083      	sub	sp, #12
 80009d8:	af00      	add	r7, sp, #0
 80009da:	6078      	str	r0, [r7, #4]
 80009dc:	460b      	mov	r3, r1
 80009de:	70fb      	strb	r3, [r7, #3]
 80009e0:	78fb      	ldrb	r3, [r7, #3]
 80009e2:	2b00      	cmp	r3, #0
 80009e4:	d006      	beq.n	80009f4 <ADC_DMARequestAfterLastTransferCmd+0x20>
 80009e6:	687b      	ldr	r3, [r7, #4]
 80009e8:	689b      	ldr	r3, [r3, #8]
 80009ea:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 80009ee:	687b      	ldr	r3, [r7, #4]
 80009f0:	609a      	str	r2, [r3, #8]
 80009f2:	e005      	b.n	8000a00 <ADC_DMARequestAfterLastTransferCmd+0x2c>
 80009f4:	687b      	ldr	r3, [r7, #4]
 80009f6:	689b      	ldr	r3, [r3, #8]
 80009f8:	f423 7200 	bic.w	r2, r3, #512	; 0x200
 80009fc:	687b      	ldr	r3, [r7, #4]
 80009fe:	609a      	str	r2, [r3, #8]
 8000a00:	bf00      	nop
 8000a02:	370c      	adds	r7, #12
 8000a04:	46bd      	mov	sp, r7
 8000a06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a0a:	4770      	bx	lr

08000a0c <DMA_DeInit>:
 8000a0c:	b480      	push	{r7}
 8000a0e:	b083      	sub	sp, #12
 8000a10:	af00      	add	r7, sp, #0
 8000a12:	6078      	str	r0, [r7, #4]
 8000a14:	687b      	ldr	r3, [r7, #4]
 8000a16:	681b      	ldr	r3, [r3, #0]
 8000a18:	f023 0201 	bic.w	r2, r3, #1
 8000a1c:	687b      	ldr	r3, [r7, #4]
 8000a1e:	601a      	str	r2, [r3, #0]
 8000a20:	687b      	ldr	r3, [r7, #4]
 8000a22:	2200      	movs	r2, #0
 8000a24:	601a      	str	r2, [r3, #0]
 8000a26:	687b      	ldr	r3, [r7, #4]
 8000a28:	2200      	movs	r2, #0
 8000a2a:	605a      	str	r2, [r3, #4]
 8000a2c:	687b      	ldr	r3, [r7, #4]
 8000a2e:	2200      	movs	r2, #0
 8000a30:	609a      	str	r2, [r3, #8]
 8000a32:	687b      	ldr	r3, [r7, #4]
 8000a34:	2200      	movs	r2, #0
 8000a36:	60da      	str	r2, [r3, #12]
 8000a38:	687b      	ldr	r3, [r7, #4]
 8000a3a:	2200      	movs	r2, #0
 8000a3c:	611a      	str	r2, [r3, #16]
 8000a3e:	687b      	ldr	r3, [r7, #4]
 8000a40:	2221      	movs	r2, #33	; 0x21
 8000a42:	615a      	str	r2, [r3, #20]
 8000a44:	687b      	ldr	r3, [r7, #4]
 8000a46:	4a46      	ldr	r2, [pc, #280]	; (8000b60 <DMA_DeInit+0x154>)
 8000a48:	4293      	cmp	r3, r2
 8000a4a:	d103      	bne.n	8000a54 <DMA_DeInit+0x48>
 8000a4c:	4b45      	ldr	r3, [pc, #276]	; (8000b64 <DMA_DeInit+0x158>)
 8000a4e:	223d      	movs	r2, #61	; 0x3d
 8000a50:	609a      	str	r2, [r3, #8]
 8000a52:	e07e      	b.n	8000b52 <DMA_DeInit+0x146>
 8000a54:	687b      	ldr	r3, [r7, #4]
 8000a56:	4a44      	ldr	r2, [pc, #272]	; (8000b68 <DMA_DeInit+0x15c>)
 8000a58:	4293      	cmp	r3, r2
 8000a5a:	d104      	bne.n	8000a66 <DMA_DeInit+0x5a>
 8000a5c:	4b41      	ldr	r3, [pc, #260]	; (8000b64 <DMA_DeInit+0x158>)
 8000a5e:	f44f 6274 	mov.w	r2, #3904	; 0xf40
 8000a62:	609a      	str	r2, [r3, #8]
 8000a64:	e075      	b.n	8000b52 <DMA_DeInit+0x146>
 8000a66:	687b      	ldr	r3, [r7, #4]
 8000a68:	4a40      	ldr	r2, [pc, #256]	; (8000b6c <DMA_DeInit+0x160>)
 8000a6a:	4293      	cmp	r3, r2
 8000a6c:	d104      	bne.n	8000a78 <DMA_DeInit+0x6c>
 8000a6e:	4b3d      	ldr	r3, [pc, #244]	; (8000b64 <DMA_DeInit+0x158>)
 8000a70:	f44f 1274 	mov.w	r2, #3997696	; 0x3d0000
 8000a74:	609a      	str	r2, [r3, #8]
 8000a76:	e06c      	b.n	8000b52 <DMA_DeInit+0x146>
 8000a78:	687b      	ldr	r3, [r7, #4]
 8000a7a:	4a3d      	ldr	r2, [pc, #244]	; (8000b70 <DMA_DeInit+0x164>)
 8000a7c:	4293      	cmp	r3, r2
 8000a7e:	d104      	bne.n	8000a8a <DMA_DeInit+0x7e>
 8000a80:	4b38      	ldr	r3, [pc, #224]	; (8000b64 <DMA_DeInit+0x158>)
 8000a82:	f04f 6274 	mov.w	r2, #255852544	; 0xf400000
 8000a86:	609a      	str	r2, [r3, #8]
 8000a88:	e063      	b.n	8000b52 <DMA_DeInit+0x146>
 8000a8a:	687b      	ldr	r3, [r7, #4]
 8000a8c:	4a39      	ldr	r2, [pc, #228]	; (8000b74 <DMA_DeInit+0x168>)
 8000a8e:	4293      	cmp	r3, r2
 8000a90:	d103      	bne.n	8000a9a <DMA_DeInit+0x8e>
 8000a92:	4b34      	ldr	r3, [pc, #208]	; (8000b64 <DMA_DeInit+0x158>)
 8000a94:	4a38      	ldr	r2, [pc, #224]	; (8000b78 <DMA_DeInit+0x16c>)
 8000a96:	60da      	str	r2, [r3, #12]
 8000a98:	e05b      	b.n	8000b52 <DMA_DeInit+0x146>
 8000a9a:	687b      	ldr	r3, [r7, #4]
 8000a9c:	4a37      	ldr	r2, [pc, #220]	; (8000b7c <DMA_DeInit+0x170>)
 8000a9e:	4293      	cmp	r3, r2
 8000aa0:	d103      	bne.n	8000aaa <DMA_DeInit+0x9e>
 8000aa2:	4b30      	ldr	r3, [pc, #192]	; (8000b64 <DMA_DeInit+0x158>)
 8000aa4:	4a36      	ldr	r2, [pc, #216]	; (8000b80 <DMA_DeInit+0x174>)
 8000aa6:	60da      	str	r2, [r3, #12]
 8000aa8:	e053      	b.n	8000b52 <DMA_DeInit+0x146>
 8000aaa:	687b      	ldr	r3, [r7, #4]
 8000aac:	4a35      	ldr	r2, [pc, #212]	; (8000b84 <DMA_DeInit+0x178>)
 8000aae:	4293      	cmp	r3, r2
 8000ab0:	d103      	bne.n	8000aba <DMA_DeInit+0xae>
 8000ab2:	4b2c      	ldr	r3, [pc, #176]	; (8000b64 <DMA_DeInit+0x158>)
 8000ab4:	4a34      	ldr	r2, [pc, #208]	; (8000b88 <DMA_DeInit+0x17c>)
 8000ab6:	60da      	str	r2, [r3, #12]
 8000ab8:	e04b      	b.n	8000b52 <DMA_DeInit+0x146>
 8000aba:	687b      	ldr	r3, [r7, #4]
 8000abc:	4a33      	ldr	r2, [pc, #204]	; (8000b8c <DMA_DeInit+0x180>)
 8000abe:	4293      	cmp	r3, r2
 8000ac0:	d104      	bne.n	8000acc <DMA_DeInit+0xc0>
 8000ac2:	4b28      	ldr	r3, [pc, #160]	; (8000b64 <DMA_DeInit+0x158>)
 8000ac4:	f04f 523d 	mov.w	r2, #792723456	; 0x2f400000
 8000ac8:	60da      	str	r2, [r3, #12]
 8000aca:	e042      	b.n	8000b52 <DMA_DeInit+0x146>
 8000acc:	687b      	ldr	r3, [r7, #4]
 8000ace:	4a30      	ldr	r2, [pc, #192]	; (8000b90 <DMA_DeInit+0x184>)
 8000ad0:	4293      	cmp	r3, r2
 8000ad2:	d103      	bne.n	8000adc <DMA_DeInit+0xd0>
 8000ad4:	4b2f      	ldr	r3, [pc, #188]	; (8000b94 <DMA_DeInit+0x188>)
 8000ad6:	223d      	movs	r2, #61	; 0x3d
 8000ad8:	609a      	str	r2, [r3, #8]
 8000ada:	e03a      	b.n	8000b52 <DMA_DeInit+0x146>
 8000adc:	687b      	ldr	r3, [r7, #4]
 8000ade:	4a2e      	ldr	r2, [pc, #184]	; (8000b98 <DMA_DeInit+0x18c>)
 8000ae0:	4293      	cmp	r3, r2
 8000ae2:	d104      	bne.n	8000aee <DMA_DeInit+0xe2>
 8000ae4:	4b2b      	ldr	r3, [pc, #172]	; (8000b94 <DMA_DeInit+0x188>)
 8000ae6:	f44f 6274 	mov.w	r2, #3904	; 0xf40
 8000aea:	609a      	str	r2, [r3, #8]
 8000aec:	e031      	b.n	8000b52 <DMA_DeInit+0x146>
 8000aee:	687b      	ldr	r3, [r7, #4]
 8000af0:	4a2a      	ldr	r2, [pc, #168]	; (8000b9c <DMA_DeInit+0x190>)
 8000af2:	4293      	cmp	r3, r2
 8000af4:	d104      	bne.n	8000b00 <DMA_DeInit+0xf4>
 8000af6:	4b27      	ldr	r3, [pc, #156]	; (8000b94 <DMA_DeInit+0x188>)
 8000af8:	f44f 1274 	mov.w	r2, #3997696	; 0x3d0000
 8000afc:	609a      	str	r2, [r3, #8]
 8000afe:	e028      	b.n	8000b52 <DMA_DeInit+0x146>
 8000b00:	687b      	ldr	r3, [r7, #4]
 8000b02:	4a27      	ldr	r2, [pc, #156]	; (8000ba0 <DMA_DeInit+0x194>)
 8000b04:	4293      	cmp	r3, r2
 8000b06:	d104      	bne.n	8000b12 <DMA_DeInit+0x106>
 8000b08:	4b22      	ldr	r3, [pc, #136]	; (8000b94 <DMA_DeInit+0x188>)
 8000b0a:	f04f 6274 	mov.w	r2, #255852544	; 0xf400000
 8000b0e:	609a      	str	r2, [r3, #8]
 8000b10:	e01f      	b.n	8000b52 <DMA_DeInit+0x146>
 8000b12:	687b      	ldr	r3, [r7, #4]
 8000b14:	4a23      	ldr	r2, [pc, #140]	; (8000ba4 <DMA_DeInit+0x198>)
 8000b16:	4293      	cmp	r3, r2
 8000b18:	d103      	bne.n	8000b22 <DMA_DeInit+0x116>
 8000b1a:	4b1e      	ldr	r3, [pc, #120]	; (8000b94 <DMA_DeInit+0x188>)
 8000b1c:	4a16      	ldr	r2, [pc, #88]	; (8000b78 <DMA_DeInit+0x16c>)
 8000b1e:	60da      	str	r2, [r3, #12]
 8000b20:	e017      	b.n	8000b52 <DMA_DeInit+0x146>
 8000b22:	687b      	ldr	r3, [r7, #4]
 8000b24:	4a20      	ldr	r2, [pc, #128]	; (8000ba8 <DMA_DeInit+0x19c>)
 8000b26:	4293      	cmp	r3, r2
 8000b28:	d103      	bne.n	8000b32 <DMA_DeInit+0x126>
 8000b2a:	4b1a      	ldr	r3, [pc, #104]	; (8000b94 <DMA_DeInit+0x188>)
 8000b2c:	4a14      	ldr	r2, [pc, #80]	; (8000b80 <DMA_DeInit+0x174>)
 8000b2e:	60da      	str	r2, [r3, #12]
 8000b30:	e00f      	b.n	8000b52 <DMA_DeInit+0x146>
 8000b32:	687b      	ldr	r3, [r7, #4]
 8000b34:	4a1d      	ldr	r2, [pc, #116]	; (8000bac <DMA_DeInit+0x1a0>)
 8000b36:	4293      	cmp	r3, r2
 8000b38:	d103      	bne.n	8000b42 <DMA_DeInit+0x136>
 8000b3a:	4b16      	ldr	r3, [pc, #88]	; (8000b94 <DMA_DeInit+0x188>)
 8000b3c:	4a12      	ldr	r2, [pc, #72]	; (8000b88 <DMA_DeInit+0x17c>)
 8000b3e:	60da      	str	r2, [r3, #12]
 8000b40:	e007      	b.n	8000b52 <DMA_DeInit+0x146>
 8000b42:	687b      	ldr	r3, [r7, #4]
 8000b44:	4a1a      	ldr	r2, [pc, #104]	; (8000bb0 <DMA_DeInit+0x1a4>)
 8000b46:	4293      	cmp	r3, r2
 8000b48:	d103      	bne.n	8000b52 <DMA_DeInit+0x146>
 8000b4a:	4b12      	ldr	r3, [pc, #72]	; (8000b94 <DMA_DeInit+0x188>)
 8000b4c:	f04f 523d 	mov.w	r2, #792723456	; 0x2f400000
 8000b50:	60da      	str	r2, [r3, #12]
 8000b52:	bf00      	nop
 8000b54:	370c      	adds	r7, #12
 8000b56:	46bd      	mov	sp, r7
 8000b58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b5c:	4770      	bx	lr
 8000b5e:	bf00      	nop
 8000b60:	40026010 	.word	0x40026010
 8000b64:	40026000 	.word	0x40026000
 8000b68:	40026028 	.word	0x40026028
 8000b6c:	40026040 	.word	0x40026040
 8000b70:	40026058 	.word	0x40026058
 8000b74:	40026070 	.word	0x40026070
 8000b78:	2000003d 	.word	0x2000003d
 8000b7c:	40026088 	.word	0x40026088
 8000b80:	20000f40 	.word	0x20000f40
 8000b84:	400260a0 	.word	0x400260a0
 8000b88:	203d0000 	.word	0x203d0000
 8000b8c:	400260b8 	.word	0x400260b8
 8000b90:	40026410 	.word	0x40026410
 8000b94:	40026400 	.word	0x40026400
 8000b98:	40026428 	.word	0x40026428
 8000b9c:	40026440 	.word	0x40026440
 8000ba0:	40026458 	.word	0x40026458
 8000ba4:	40026470 	.word	0x40026470
 8000ba8:	40026488 	.word	0x40026488
 8000bac:	400264a0 	.word	0x400264a0
 8000bb0:	400264b8 	.word	0x400264b8

08000bb4 <DMA_Init>:
 8000bb4:	b480      	push	{r7}
 8000bb6:	b085      	sub	sp, #20
 8000bb8:	af00      	add	r7, sp, #0
 8000bba:	6078      	str	r0, [r7, #4]
 8000bbc:	6039      	str	r1, [r7, #0]
 8000bbe:	2300      	movs	r3, #0
 8000bc0:	60fb      	str	r3, [r7, #12]
 8000bc2:	687b      	ldr	r3, [r7, #4]
 8000bc4:	681b      	ldr	r3, [r3, #0]
 8000bc6:	60fb      	str	r3, [r7, #12]
 8000bc8:	68fa      	ldr	r2, [r7, #12]
 8000bca:	4b25      	ldr	r3, [pc, #148]	; (8000c60 <DMA_Init+0xac>)
 8000bcc:	4013      	ands	r3, r2
 8000bce:	60fb      	str	r3, [r7, #12]
 8000bd0:	683b      	ldr	r3, [r7, #0]
 8000bd2:	681a      	ldr	r2, [r3, #0]
 8000bd4:	683b      	ldr	r3, [r7, #0]
 8000bd6:	68db      	ldr	r3, [r3, #12]
 8000bd8:	431a      	orrs	r2, r3
 8000bda:	683b      	ldr	r3, [r7, #0]
 8000bdc:	695b      	ldr	r3, [r3, #20]
 8000bde:	431a      	orrs	r2, r3
 8000be0:	683b      	ldr	r3, [r7, #0]
 8000be2:	699b      	ldr	r3, [r3, #24]
 8000be4:	431a      	orrs	r2, r3
 8000be6:	683b      	ldr	r3, [r7, #0]
 8000be8:	69db      	ldr	r3, [r3, #28]
 8000bea:	431a      	orrs	r2, r3
 8000bec:	683b      	ldr	r3, [r7, #0]
 8000bee:	6a1b      	ldr	r3, [r3, #32]
 8000bf0:	431a      	orrs	r2, r3
 8000bf2:	683b      	ldr	r3, [r7, #0]
 8000bf4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000bf6:	431a      	orrs	r2, r3
 8000bf8:	683b      	ldr	r3, [r7, #0]
 8000bfa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000bfc:	431a      	orrs	r2, r3
 8000bfe:	683b      	ldr	r3, [r7, #0]
 8000c00:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000c02:	431a      	orrs	r2, r3
 8000c04:	683b      	ldr	r3, [r7, #0]
 8000c06:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000c08:	4313      	orrs	r3, r2
 8000c0a:	68fa      	ldr	r2, [r7, #12]
 8000c0c:	4313      	orrs	r3, r2
 8000c0e:	60fb      	str	r3, [r7, #12]
 8000c10:	687b      	ldr	r3, [r7, #4]
 8000c12:	68fa      	ldr	r2, [r7, #12]
 8000c14:	601a      	str	r2, [r3, #0]
 8000c16:	687b      	ldr	r3, [r7, #4]
 8000c18:	695b      	ldr	r3, [r3, #20]
 8000c1a:	60fb      	str	r3, [r7, #12]
 8000c1c:	68fb      	ldr	r3, [r7, #12]
 8000c1e:	f023 0307 	bic.w	r3, r3, #7
 8000c22:	60fb      	str	r3, [r7, #12]
 8000c24:	683b      	ldr	r3, [r7, #0]
 8000c26:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000c28:	683b      	ldr	r3, [r7, #0]
 8000c2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c2c:	4313      	orrs	r3, r2
 8000c2e:	68fa      	ldr	r2, [r7, #12]
 8000c30:	4313      	orrs	r3, r2
 8000c32:	60fb      	str	r3, [r7, #12]
 8000c34:	687b      	ldr	r3, [r7, #4]
 8000c36:	68fa      	ldr	r2, [r7, #12]
 8000c38:	615a      	str	r2, [r3, #20]
 8000c3a:	683b      	ldr	r3, [r7, #0]
 8000c3c:	691a      	ldr	r2, [r3, #16]
 8000c3e:	687b      	ldr	r3, [r7, #4]
 8000c40:	605a      	str	r2, [r3, #4]
 8000c42:	683b      	ldr	r3, [r7, #0]
 8000c44:	685a      	ldr	r2, [r3, #4]
 8000c46:	687b      	ldr	r3, [r7, #4]
 8000c48:	609a      	str	r2, [r3, #8]
 8000c4a:	683b      	ldr	r3, [r7, #0]
 8000c4c:	689a      	ldr	r2, [r3, #8]
 8000c4e:	687b      	ldr	r3, [r7, #4]
 8000c50:	60da      	str	r2, [r3, #12]
 8000c52:	bf00      	nop
 8000c54:	3714      	adds	r7, #20
 8000c56:	46bd      	mov	sp, r7
 8000c58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c5c:	4770      	bx	lr
 8000c5e:	bf00      	nop
 8000c60:	f01c803f 	.word	0xf01c803f

08000c64 <DMA_Cmd>:
 8000c64:	b480      	push	{r7}
 8000c66:	b083      	sub	sp, #12
 8000c68:	af00      	add	r7, sp, #0
 8000c6a:	6078      	str	r0, [r7, #4]
 8000c6c:	460b      	mov	r3, r1
 8000c6e:	70fb      	strb	r3, [r7, #3]
 8000c70:	78fb      	ldrb	r3, [r7, #3]
 8000c72:	2b00      	cmp	r3, #0
 8000c74:	d006      	beq.n	8000c84 <DMA_Cmd+0x20>
 8000c76:	687b      	ldr	r3, [r7, #4]
 8000c78:	681b      	ldr	r3, [r3, #0]
 8000c7a:	f043 0201 	orr.w	r2, r3, #1
 8000c7e:	687b      	ldr	r3, [r7, #4]
 8000c80:	601a      	str	r2, [r3, #0]
 8000c82:	e005      	b.n	8000c90 <DMA_Cmd+0x2c>
 8000c84:	687b      	ldr	r3, [r7, #4]
 8000c86:	681b      	ldr	r3, [r3, #0]
 8000c88:	f023 0201 	bic.w	r2, r3, #1
 8000c8c:	687b      	ldr	r3, [r7, #4]
 8000c8e:	601a      	str	r2, [r3, #0]
 8000c90:	bf00      	nop
 8000c92:	370c      	adds	r7, #12
 8000c94:	46bd      	mov	sp, r7
 8000c96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c9a:	4770      	bx	lr

08000c9c <GPIO_Init>:
 8000c9c:	b480      	push	{r7}
 8000c9e:	b087      	sub	sp, #28
 8000ca0:	af00      	add	r7, sp, #0
 8000ca2:	6078      	str	r0, [r7, #4]
 8000ca4:	6039      	str	r1, [r7, #0]
 8000ca6:	2300      	movs	r3, #0
 8000ca8:	617b      	str	r3, [r7, #20]
 8000caa:	2300      	movs	r3, #0
 8000cac:	613b      	str	r3, [r7, #16]
 8000cae:	2300      	movs	r3, #0
 8000cb0:	60fb      	str	r3, [r7, #12]
 8000cb2:	2300      	movs	r3, #0
 8000cb4:	617b      	str	r3, [r7, #20]
 8000cb6:	e076      	b.n	8000da6 <GPIO_Init+0x10a>
 8000cb8:	2201      	movs	r2, #1
 8000cba:	697b      	ldr	r3, [r7, #20]
 8000cbc:	fa02 f303 	lsl.w	r3, r2, r3
 8000cc0:	613b      	str	r3, [r7, #16]
 8000cc2:	683b      	ldr	r3, [r7, #0]
 8000cc4:	681b      	ldr	r3, [r3, #0]
 8000cc6:	693a      	ldr	r2, [r7, #16]
 8000cc8:	4013      	ands	r3, r2
 8000cca:	60fb      	str	r3, [r7, #12]
 8000ccc:	68fa      	ldr	r2, [r7, #12]
 8000cce:	693b      	ldr	r3, [r7, #16]
 8000cd0:	429a      	cmp	r2, r3
 8000cd2:	d165      	bne.n	8000da0 <GPIO_Init+0x104>
 8000cd4:	687b      	ldr	r3, [r7, #4]
 8000cd6:	681a      	ldr	r2, [r3, #0]
 8000cd8:	697b      	ldr	r3, [r7, #20]
 8000cda:	005b      	lsls	r3, r3, #1
 8000cdc:	2103      	movs	r1, #3
 8000cde:	fa01 f303 	lsl.w	r3, r1, r3
 8000ce2:	43db      	mvns	r3, r3
 8000ce4:	401a      	ands	r2, r3
 8000ce6:	687b      	ldr	r3, [r7, #4]
 8000ce8:	601a      	str	r2, [r3, #0]
 8000cea:	687b      	ldr	r3, [r7, #4]
 8000cec:	681a      	ldr	r2, [r3, #0]
 8000cee:	683b      	ldr	r3, [r7, #0]
 8000cf0:	791b      	ldrb	r3, [r3, #4]
 8000cf2:	4619      	mov	r1, r3
 8000cf4:	697b      	ldr	r3, [r7, #20]
 8000cf6:	005b      	lsls	r3, r3, #1
 8000cf8:	fa01 f303 	lsl.w	r3, r1, r3
 8000cfc:	431a      	orrs	r2, r3
 8000cfe:	687b      	ldr	r3, [r7, #4]
 8000d00:	601a      	str	r2, [r3, #0]
 8000d02:	683b      	ldr	r3, [r7, #0]
 8000d04:	791b      	ldrb	r3, [r3, #4]
 8000d06:	2b01      	cmp	r3, #1
 8000d08:	d003      	beq.n	8000d12 <GPIO_Init+0x76>
 8000d0a:	683b      	ldr	r3, [r7, #0]
 8000d0c:	791b      	ldrb	r3, [r3, #4]
 8000d0e:	2b02      	cmp	r3, #2
 8000d10:	d12e      	bne.n	8000d70 <GPIO_Init+0xd4>
 8000d12:	687b      	ldr	r3, [r7, #4]
 8000d14:	689a      	ldr	r2, [r3, #8]
 8000d16:	697b      	ldr	r3, [r7, #20]
 8000d18:	005b      	lsls	r3, r3, #1
 8000d1a:	2103      	movs	r1, #3
 8000d1c:	fa01 f303 	lsl.w	r3, r1, r3
 8000d20:	43db      	mvns	r3, r3
 8000d22:	401a      	ands	r2, r3
 8000d24:	687b      	ldr	r3, [r7, #4]
 8000d26:	609a      	str	r2, [r3, #8]
 8000d28:	687b      	ldr	r3, [r7, #4]
 8000d2a:	689a      	ldr	r2, [r3, #8]
 8000d2c:	683b      	ldr	r3, [r7, #0]
 8000d2e:	795b      	ldrb	r3, [r3, #5]
 8000d30:	4619      	mov	r1, r3
 8000d32:	697b      	ldr	r3, [r7, #20]
 8000d34:	005b      	lsls	r3, r3, #1
 8000d36:	fa01 f303 	lsl.w	r3, r1, r3
 8000d3a:	431a      	orrs	r2, r3
 8000d3c:	687b      	ldr	r3, [r7, #4]
 8000d3e:	609a      	str	r2, [r3, #8]
 8000d40:	687b      	ldr	r3, [r7, #4]
 8000d42:	685a      	ldr	r2, [r3, #4]
 8000d44:	697b      	ldr	r3, [r7, #20]
 8000d46:	b29b      	uxth	r3, r3
 8000d48:	4619      	mov	r1, r3
 8000d4a:	2301      	movs	r3, #1
 8000d4c:	408b      	lsls	r3, r1
 8000d4e:	43db      	mvns	r3, r3
 8000d50:	401a      	ands	r2, r3
 8000d52:	687b      	ldr	r3, [r7, #4]
 8000d54:	605a      	str	r2, [r3, #4]
 8000d56:	687b      	ldr	r3, [r7, #4]
 8000d58:	685b      	ldr	r3, [r3, #4]
 8000d5a:	683a      	ldr	r2, [r7, #0]
 8000d5c:	7992      	ldrb	r2, [r2, #6]
 8000d5e:	4611      	mov	r1, r2
 8000d60:	697a      	ldr	r2, [r7, #20]
 8000d62:	b292      	uxth	r2, r2
 8000d64:	fa01 f202 	lsl.w	r2, r1, r2
 8000d68:	b292      	uxth	r2, r2
 8000d6a:	431a      	orrs	r2, r3
 8000d6c:	687b      	ldr	r3, [r7, #4]
 8000d6e:	605a      	str	r2, [r3, #4]
 8000d70:	687b      	ldr	r3, [r7, #4]
 8000d72:	68da      	ldr	r2, [r3, #12]
 8000d74:	697b      	ldr	r3, [r7, #20]
 8000d76:	b29b      	uxth	r3, r3
 8000d78:	005b      	lsls	r3, r3, #1
 8000d7a:	2103      	movs	r1, #3
 8000d7c:	fa01 f303 	lsl.w	r3, r1, r3
 8000d80:	43db      	mvns	r3, r3
 8000d82:	401a      	ands	r2, r3
 8000d84:	687b      	ldr	r3, [r7, #4]
 8000d86:	60da      	str	r2, [r3, #12]
 8000d88:	687b      	ldr	r3, [r7, #4]
 8000d8a:	68da      	ldr	r2, [r3, #12]
 8000d8c:	683b      	ldr	r3, [r7, #0]
 8000d8e:	79db      	ldrb	r3, [r3, #7]
 8000d90:	4619      	mov	r1, r3
 8000d92:	697b      	ldr	r3, [r7, #20]
 8000d94:	005b      	lsls	r3, r3, #1
 8000d96:	fa01 f303 	lsl.w	r3, r1, r3
 8000d9a:	431a      	orrs	r2, r3
 8000d9c:	687b      	ldr	r3, [r7, #4]
 8000d9e:	60da      	str	r2, [r3, #12]
 8000da0:	697b      	ldr	r3, [r7, #20]
 8000da2:	3301      	adds	r3, #1
 8000da4:	617b      	str	r3, [r7, #20]
 8000da6:	697b      	ldr	r3, [r7, #20]
 8000da8:	2b0f      	cmp	r3, #15
 8000daa:	d985      	bls.n	8000cb8 <GPIO_Init+0x1c>
 8000dac:	bf00      	nop
 8000dae:	371c      	adds	r7, #28
 8000db0:	46bd      	mov	sp, r7
 8000db2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000db6:	4770      	bx	lr

08000db8 <GPIO_PinAFConfig>:
 8000db8:	b480      	push	{r7}
 8000dba:	b085      	sub	sp, #20
 8000dbc:	af00      	add	r7, sp, #0
 8000dbe:	6078      	str	r0, [r7, #4]
 8000dc0:	460b      	mov	r3, r1
 8000dc2:	807b      	strh	r3, [r7, #2]
 8000dc4:	4613      	mov	r3, r2
 8000dc6:	707b      	strb	r3, [r7, #1]
 8000dc8:	2300      	movs	r3, #0
 8000dca:	60fb      	str	r3, [r7, #12]
 8000dcc:	2300      	movs	r3, #0
 8000dce:	60bb      	str	r3, [r7, #8]
 8000dd0:	787a      	ldrb	r2, [r7, #1]
 8000dd2:	887b      	ldrh	r3, [r7, #2]
 8000dd4:	f003 0307 	and.w	r3, r3, #7
 8000dd8:	009b      	lsls	r3, r3, #2
 8000dda:	fa02 f303 	lsl.w	r3, r2, r3
 8000dde:	60fb      	str	r3, [r7, #12]
 8000de0:	887b      	ldrh	r3, [r7, #2]
 8000de2:	08db      	lsrs	r3, r3, #3
 8000de4:	b29b      	uxth	r3, r3
 8000de6:	461a      	mov	r2, r3
 8000de8:	687b      	ldr	r3, [r7, #4]
 8000dea:	3208      	adds	r2, #8
 8000dec:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000df0:	887b      	ldrh	r3, [r7, #2]
 8000df2:	f003 0307 	and.w	r3, r3, #7
 8000df6:	009b      	lsls	r3, r3, #2
 8000df8:	210f      	movs	r1, #15
 8000dfa:	fa01 f303 	lsl.w	r3, r1, r3
 8000dfe:	43db      	mvns	r3, r3
 8000e00:	8879      	ldrh	r1, [r7, #2]
 8000e02:	08c9      	lsrs	r1, r1, #3
 8000e04:	b289      	uxth	r1, r1
 8000e06:	4608      	mov	r0, r1
 8000e08:	ea02 0103 	and.w	r1, r2, r3
 8000e0c:	687b      	ldr	r3, [r7, #4]
 8000e0e:	f100 0208 	add.w	r2, r0, #8
 8000e12:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000e16:	887b      	ldrh	r3, [r7, #2]
 8000e18:	08db      	lsrs	r3, r3, #3
 8000e1a:	b29b      	uxth	r3, r3
 8000e1c:	461a      	mov	r2, r3
 8000e1e:	687b      	ldr	r3, [r7, #4]
 8000e20:	3208      	adds	r2, #8
 8000e22:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000e26:	68fa      	ldr	r2, [r7, #12]
 8000e28:	4313      	orrs	r3, r2
 8000e2a:	60bb      	str	r3, [r7, #8]
 8000e2c:	887b      	ldrh	r3, [r7, #2]
 8000e2e:	08db      	lsrs	r3, r3, #3
 8000e30:	b29b      	uxth	r3, r3
 8000e32:	461a      	mov	r2, r3
 8000e34:	687b      	ldr	r3, [r7, #4]
 8000e36:	3208      	adds	r2, #8
 8000e38:	68b9      	ldr	r1, [r7, #8]
 8000e3a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000e3e:	bf00      	nop
 8000e40:	3714      	adds	r7, #20
 8000e42:	46bd      	mov	sp, r7
 8000e44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e48:	4770      	bx	lr
	...

08000e4c <RCC_GetClocksFreq>:
 8000e4c:	b480      	push	{r7}
 8000e4e:	b089      	sub	sp, #36	; 0x24
 8000e50:	af00      	add	r7, sp, #0
 8000e52:	6078      	str	r0, [r7, #4]
 8000e54:	2300      	movs	r3, #0
 8000e56:	61bb      	str	r3, [r7, #24]
 8000e58:	2300      	movs	r3, #0
 8000e5a:	617b      	str	r3, [r7, #20]
 8000e5c:	2300      	movs	r3, #0
 8000e5e:	61fb      	str	r3, [r7, #28]
 8000e60:	2302      	movs	r3, #2
 8000e62:	613b      	str	r3, [r7, #16]
 8000e64:	2300      	movs	r3, #0
 8000e66:	60fb      	str	r3, [r7, #12]
 8000e68:	2302      	movs	r3, #2
 8000e6a:	60bb      	str	r3, [r7, #8]
 8000e6c:	4b47      	ldr	r3, [pc, #284]	; (8000f8c <RCC_GetClocksFreq+0x140>)
 8000e6e:	689b      	ldr	r3, [r3, #8]
 8000e70:	f003 030c 	and.w	r3, r3, #12
 8000e74:	61bb      	str	r3, [r7, #24]
 8000e76:	69bb      	ldr	r3, [r7, #24]
 8000e78:	2b04      	cmp	r3, #4
 8000e7a:	d007      	beq.n	8000e8c <RCC_GetClocksFreq+0x40>
 8000e7c:	2b08      	cmp	r3, #8
 8000e7e:	d009      	beq.n	8000e94 <RCC_GetClocksFreq+0x48>
 8000e80:	2b00      	cmp	r3, #0
 8000e82:	d13d      	bne.n	8000f00 <RCC_GetClocksFreq+0xb4>
 8000e84:	687b      	ldr	r3, [r7, #4]
 8000e86:	4a42      	ldr	r2, [pc, #264]	; (8000f90 <RCC_GetClocksFreq+0x144>)
 8000e88:	601a      	str	r2, [r3, #0]
 8000e8a:	e03d      	b.n	8000f08 <RCC_GetClocksFreq+0xbc>
 8000e8c:	687b      	ldr	r3, [r7, #4]
 8000e8e:	4a41      	ldr	r2, [pc, #260]	; (8000f94 <RCC_GetClocksFreq+0x148>)
 8000e90:	601a      	str	r2, [r3, #0]
 8000e92:	e039      	b.n	8000f08 <RCC_GetClocksFreq+0xbc>
 8000e94:	4b3d      	ldr	r3, [pc, #244]	; (8000f8c <RCC_GetClocksFreq+0x140>)
 8000e96:	685b      	ldr	r3, [r3, #4]
 8000e98:	0d9b      	lsrs	r3, r3, #22
 8000e9a:	f003 0301 	and.w	r3, r3, #1
 8000e9e:	60fb      	str	r3, [r7, #12]
 8000ea0:	4b3a      	ldr	r3, [pc, #232]	; (8000f8c <RCC_GetClocksFreq+0x140>)
 8000ea2:	685b      	ldr	r3, [r3, #4]
 8000ea4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8000ea8:	60bb      	str	r3, [r7, #8]
 8000eaa:	68fb      	ldr	r3, [r7, #12]
 8000eac:	2b00      	cmp	r3, #0
 8000eae:	d00c      	beq.n	8000eca <RCC_GetClocksFreq+0x7e>
 8000eb0:	4a38      	ldr	r2, [pc, #224]	; (8000f94 <RCC_GetClocksFreq+0x148>)
 8000eb2:	68bb      	ldr	r3, [r7, #8]
 8000eb4:	fbb2 f3f3 	udiv	r3, r2, r3
 8000eb8:	4a34      	ldr	r2, [pc, #208]	; (8000f8c <RCC_GetClocksFreq+0x140>)
 8000eba:	6852      	ldr	r2, [r2, #4]
 8000ebc:	0992      	lsrs	r2, r2, #6
 8000ebe:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000ec2:	fb02 f303 	mul.w	r3, r2, r3
 8000ec6:	61fb      	str	r3, [r7, #28]
 8000ec8:	e00b      	b.n	8000ee2 <RCC_GetClocksFreq+0x96>
 8000eca:	4a31      	ldr	r2, [pc, #196]	; (8000f90 <RCC_GetClocksFreq+0x144>)
 8000ecc:	68bb      	ldr	r3, [r7, #8]
 8000ece:	fbb2 f3f3 	udiv	r3, r2, r3
 8000ed2:	4a2e      	ldr	r2, [pc, #184]	; (8000f8c <RCC_GetClocksFreq+0x140>)
 8000ed4:	6852      	ldr	r2, [r2, #4]
 8000ed6:	0992      	lsrs	r2, r2, #6
 8000ed8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000edc:	fb02 f303 	mul.w	r3, r2, r3
 8000ee0:	61fb      	str	r3, [r7, #28]
 8000ee2:	4b2a      	ldr	r3, [pc, #168]	; (8000f8c <RCC_GetClocksFreq+0x140>)
 8000ee4:	685b      	ldr	r3, [r3, #4]
 8000ee6:	0c1b      	lsrs	r3, r3, #16
 8000ee8:	f003 0303 	and.w	r3, r3, #3
 8000eec:	3301      	adds	r3, #1
 8000eee:	005b      	lsls	r3, r3, #1
 8000ef0:	613b      	str	r3, [r7, #16]
 8000ef2:	69fa      	ldr	r2, [r7, #28]
 8000ef4:	693b      	ldr	r3, [r7, #16]
 8000ef6:	fbb2 f2f3 	udiv	r2, r2, r3
 8000efa:	687b      	ldr	r3, [r7, #4]
 8000efc:	601a      	str	r2, [r3, #0]
 8000efe:	e003      	b.n	8000f08 <RCC_GetClocksFreq+0xbc>
 8000f00:	687b      	ldr	r3, [r7, #4]
 8000f02:	4a23      	ldr	r2, [pc, #140]	; (8000f90 <RCC_GetClocksFreq+0x144>)
 8000f04:	601a      	str	r2, [r3, #0]
 8000f06:	bf00      	nop
 8000f08:	4b20      	ldr	r3, [pc, #128]	; (8000f8c <RCC_GetClocksFreq+0x140>)
 8000f0a:	689b      	ldr	r3, [r3, #8]
 8000f0c:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8000f10:	61bb      	str	r3, [r7, #24]
 8000f12:	69bb      	ldr	r3, [r7, #24]
 8000f14:	091b      	lsrs	r3, r3, #4
 8000f16:	61bb      	str	r3, [r7, #24]
 8000f18:	4a1f      	ldr	r2, [pc, #124]	; (8000f98 <RCC_GetClocksFreq+0x14c>)
 8000f1a:	69bb      	ldr	r3, [r7, #24]
 8000f1c:	4413      	add	r3, r2
 8000f1e:	781b      	ldrb	r3, [r3, #0]
 8000f20:	b2db      	uxtb	r3, r3
 8000f22:	617b      	str	r3, [r7, #20]
 8000f24:	687b      	ldr	r3, [r7, #4]
 8000f26:	681a      	ldr	r2, [r3, #0]
 8000f28:	697b      	ldr	r3, [r7, #20]
 8000f2a:	40da      	lsrs	r2, r3
 8000f2c:	687b      	ldr	r3, [r7, #4]
 8000f2e:	605a      	str	r2, [r3, #4]
 8000f30:	4b16      	ldr	r3, [pc, #88]	; (8000f8c <RCC_GetClocksFreq+0x140>)
 8000f32:	689b      	ldr	r3, [r3, #8]
 8000f34:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8000f38:	61bb      	str	r3, [r7, #24]
 8000f3a:	69bb      	ldr	r3, [r7, #24]
 8000f3c:	0a9b      	lsrs	r3, r3, #10
 8000f3e:	61bb      	str	r3, [r7, #24]
 8000f40:	4a15      	ldr	r2, [pc, #84]	; (8000f98 <RCC_GetClocksFreq+0x14c>)
 8000f42:	69bb      	ldr	r3, [r7, #24]
 8000f44:	4413      	add	r3, r2
 8000f46:	781b      	ldrb	r3, [r3, #0]
 8000f48:	b2db      	uxtb	r3, r3
 8000f4a:	617b      	str	r3, [r7, #20]
 8000f4c:	687b      	ldr	r3, [r7, #4]
 8000f4e:	685a      	ldr	r2, [r3, #4]
 8000f50:	697b      	ldr	r3, [r7, #20]
 8000f52:	40da      	lsrs	r2, r3
 8000f54:	687b      	ldr	r3, [r7, #4]
 8000f56:	609a      	str	r2, [r3, #8]
 8000f58:	4b0c      	ldr	r3, [pc, #48]	; (8000f8c <RCC_GetClocksFreq+0x140>)
 8000f5a:	689b      	ldr	r3, [r3, #8]
 8000f5c:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8000f60:	61bb      	str	r3, [r7, #24]
 8000f62:	69bb      	ldr	r3, [r7, #24]
 8000f64:	0b5b      	lsrs	r3, r3, #13
 8000f66:	61bb      	str	r3, [r7, #24]
 8000f68:	4a0b      	ldr	r2, [pc, #44]	; (8000f98 <RCC_GetClocksFreq+0x14c>)
 8000f6a:	69bb      	ldr	r3, [r7, #24]
 8000f6c:	4413      	add	r3, r2
 8000f6e:	781b      	ldrb	r3, [r3, #0]
 8000f70:	b2db      	uxtb	r3, r3
 8000f72:	617b      	str	r3, [r7, #20]
 8000f74:	687b      	ldr	r3, [r7, #4]
 8000f76:	685a      	ldr	r2, [r3, #4]
 8000f78:	697b      	ldr	r3, [r7, #20]
 8000f7a:	40da      	lsrs	r2, r3
 8000f7c:	687b      	ldr	r3, [r7, #4]
 8000f7e:	60da      	str	r2, [r3, #12]
 8000f80:	bf00      	nop
 8000f82:	3724      	adds	r7, #36	; 0x24
 8000f84:	46bd      	mov	sp, r7
 8000f86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f8a:	4770      	bx	lr
 8000f8c:	40023800 	.word	0x40023800
 8000f90:	00f42400 	.word	0x00f42400
 8000f94:	017d7840 	.word	0x017d7840
 8000f98:	20000014 	.word	0x20000014

08000f9c <RCC_AHB1PeriphClockCmd>:
 8000f9c:	b480      	push	{r7}
 8000f9e:	b083      	sub	sp, #12
 8000fa0:	af00      	add	r7, sp, #0
 8000fa2:	6078      	str	r0, [r7, #4]
 8000fa4:	460b      	mov	r3, r1
 8000fa6:	70fb      	strb	r3, [r7, #3]
 8000fa8:	78fb      	ldrb	r3, [r7, #3]
 8000faa:	2b00      	cmp	r3, #0
 8000fac:	d006      	beq.n	8000fbc <RCC_AHB1PeriphClockCmd+0x20>
 8000fae:	4b0a      	ldr	r3, [pc, #40]	; (8000fd8 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000fb0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000fb2:	4909      	ldr	r1, [pc, #36]	; (8000fd8 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000fb4:	687b      	ldr	r3, [r7, #4]
 8000fb6:	4313      	orrs	r3, r2
 8000fb8:	630b      	str	r3, [r1, #48]	; 0x30
 8000fba:	e006      	b.n	8000fca <RCC_AHB1PeriphClockCmd+0x2e>
 8000fbc:	4b06      	ldr	r3, [pc, #24]	; (8000fd8 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000fbe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000fc0:	687b      	ldr	r3, [r7, #4]
 8000fc2:	43db      	mvns	r3, r3
 8000fc4:	4904      	ldr	r1, [pc, #16]	; (8000fd8 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000fc6:	4013      	ands	r3, r2
 8000fc8:	630b      	str	r3, [r1, #48]	; 0x30
 8000fca:	bf00      	nop
 8000fcc:	370c      	adds	r7, #12
 8000fce:	46bd      	mov	sp, r7
 8000fd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fd4:	4770      	bx	lr
 8000fd6:	bf00      	nop
 8000fd8:	40023800 	.word	0x40023800

08000fdc <RCC_APB1PeriphClockCmd>:
 8000fdc:	b480      	push	{r7}
 8000fde:	b083      	sub	sp, #12
 8000fe0:	af00      	add	r7, sp, #0
 8000fe2:	6078      	str	r0, [r7, #4]
 8000fe4:	460b      	mov	r3, r1
 8000fe6:	70fb      	strb	r3, [r7, #3]
 8000fe8:	78fb      	ldrb	r3, [r7, #3]
 8000fea:	2b00      	cmp	r3, #0
 8000fec:	d006      	beq.n	8000ffc <RCC_APB1PeriphClockCmd+0x20>
 8000fee:	4b0a      	ldr	r3, [pc, #40]	; (8001018 <RCC_APB1PeriphClockCmd+0x3c>)
 8000ff0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000ff2:	4909      	ldr	r1, [pc, #36]	; (8001018 <RCC_APB1PeriphClockCmd+0x3c>)
 8000ff4:	687b      	ldr	r3, [r7, #4]
 8000ff6:	4313      	orrs	r3, r2
 8000ff8:	640b      	str	r3, [r1, #64]	; 0x40
 8000ffa:	e006      	b.n	800100a <RCC_APB1PeriphClockCmd+0x2e>
 8000ffc:	4b06      	ldr	r3, [pc, #24]	; (8001018 <RCC_APB1PeriphClockCmd+0x3c>)
 8000ffe:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001000:	687b      	ldr	r3, [r7, #4]
 8001002:	43db      	mvns	r3, r3
 8001004:	4904      	ldr	r1, [pc, #16]	; (8001018 <RCC_APB1PeriphClockCmd+0x3c>)
 8001006:	4013      	ands	r3, r2
 8001008:	640b      	str	r3, [r1, #64]	; 0x40
 800100a:	bf00      	nop
 800100c:	370c      	adds	r7, #12
 800100e:	46bd      	mov	sp, r7
 8001010:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001014:	4770      	bx	lr
 8001016:	bf00      	nop
 8001018:	40023800 	.word	0x40023800

0800101c <RCC_APB2PeriphClockCmd>:
 800101c:	b480      	push	{r7}
 800101e:	b083      	sub	sp, #12
 8001020:	af00      	add	r7, sp, #0
 8001022:	6078      	str	r0, [r7, #4]
 8001024:	460b      	mov	r3, r1
 8001026:	70fb      	strb	r3, [r7, #3]
 8001028:	78fb      	ldrb	r3, [r7, #3]
 800102a:	2b00      	cmp	r3, #0
 800102c:	d006      	beq.n	800103c <RCC_APB2PeriphClockCmd+0x20>
 800102e:	4b0a      	ldr	r3, [pc, #40]	; (8001058 <RCC_APB2PeriphClockCmd+0x3c>)
 8001030:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001032:	4909      	ldr	r1, [pc, #36]	; (8001058 <RCC_APB2PeriphClockCmd+0x3c>)
 8001034:	687b      	ldr	r3, [r7, #4]
 8001036:	4313      	orrs	r3, r2
 8001038:	644b      	str	r3, [r1, #68]	; 0x44
 800103a:	e006      	b.n	800104a <RCC_APB2PeriphClockCmd+0x2e>
 800103c:	4b06      	ldr	r3, [pc, #24]	; (8001058 <RCC_APB2PeriphClockCmd+0x3c>)
 800103e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001040:	687b      	ldr	r3, [r7, #4]
 8001042:	43db      	mvns	r3, r3
 8001044:	4904      	ldr	r1, [pc, #16]	; (8001058 <RCC_APB2PeriphClockCmd+0x3c>)
 8001046:	4013      	ands	r3, r2
 8001048:	644b      	str	r3, [r1, #68]	; 0x44
 800104a:	bf00      	nop
 800104c:	370c      	adds	r7, #12
 800104e:	46bd      	mov	sp, r7
 8001050:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001054:	4770      	bx	lr
 8001056:	bf00      	nop
 8001058:	40023800 	.word	0x40023800

0800105c <RCC_APB2PeriphResetCmd>:
 800105c:	b480      	push	{r7}
 800105e:	b083      	sub	sp, #12
 8001060:	af00      	add	r7, sp, #0
 8001062:	6078      	str	r0, [r7, #4]
 8001064:	460b      	mov	r3, r1
 8001066:	70fb      	strb	r3, [r7, #3]
 8001068:	78fb      	ldrb	r3, [r7, #3]
 800106a:	2b00      	cmp	r3, #0
 800106c:	d006      	beq.n	800107c <RCC_APB2PeriphResetCmd+0x20>
 800106e:	4b0a      	ldr	r3, [pc, #40]	; (8001098 <RCC_APB2PeriphResetCmd+0x3c>)
 8001070:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8001072:	4909      	ldr	r1, [pc, #36]	; (8001098 <RCC_APB2PeriphResetCmd+0x3c>)
 8001074:	687b      	ldr	r3, [r7, #4]
 8001076:	4313      	orrs	r3, r2
 8001078:	624b      	str	r3, [r1, #36]	; 0x24
 800107a:	e006      	b.n	800108a <RCC_APB2PeriphResetCmd+0x2e>
 800107c:	4b06      	ldr	r3, [pc, #24]	; (8001098 <RCC_APB2PeriphResetCmd+0x3c>)
 800107e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8001080:	687b      	ldr	r3, [r7, #4]
 8001082:	43db      	mvns	r3, r3
 8001084:	4904      	ldr	r1, [pc, #16]	; (8001098 <RCC_APB2PeriphResetCmd+0x3c>)
 8001086:	4013      	ands	r3, r2
 8001088:	624b      	str	r3, [r1, #36]	; 0x24
 800108a:	bf00      	nop
 800108c:	370c      	adds	r7, #12
 800108e:	46bd      	mov	sp, r7
 8001090:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001094:	4770      	bx	lr
 8001096:	bf00      	nop
 8001098:	40023800 	.word	0x40023800

0800109c <USART_Init>:
 800109c:	b580      	push	{r7, lr}
 800109e:	b08a      	sub	sp, #40	; 0x28
 80010a0:	af00      	add	r7, sp, #0
 80010a2:	6078      	str	r0, [r7, #4]
 80010a4:	6039      	str	r1, [r7, #0]
 80010a6:	2300      	movs	r3, #0
 80010a8:	627b      	str	r3, [r7, #36]	; 0x24
 80010aa:	2300      	movs	r3, #0
 80010ac:	623b      	str	r3, [r7, #32]
 80010ae:	2300      	movs	r3, #0
 80010b0:	61fb      	str	r3, [r7, #28]
 80010b2:	2300      	movs	r3, #0
 80010b4:	61bb      	str	r3, [r7, #24]
 80010b6:	687b      	ldr	r3, [r7, #4]
 80010b8:	8a1b      	ldrh	r3, [r3, #16]
 80010ba:	b29b      	uxth	r3, r3
 80010bc:	627b      	str	r3, [r7, #36]	; 0x24
 80010be:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80010c0:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80010c4:	627b      	str	r3, [r7, #36]	; 0x24
 80010c6:	683b      	ldr	r3, [r7, #0]
 80010c8:	88db      	ldrh	r3, [r3, #6]
 80010ca:	461a      	mov	r2, r3
 80010cc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80010ce:	4313      	orrs	r3, r2
 80010d0:	627b      	str	r3, [r7, #36]	; 0x24
 80010d2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80010d4:	b29a      	uxth	r2, r3
 80010d6:	687b      	ldr	r3, [r7, #4]
 80010d8:	821a      	strh	r2, [r3, #16]
 80010da:	687b      	ldr	r3, [r7, #4]
 80010dc:	899b      	ldrh	r3, [r3, #12]
 80010de:	b29b      	uxth	r3, r3
 80010e0:	627b      	str	r3, [r7, #36]	; 0x24
 80010e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80010e4:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 80010e8:	f023 030c 	bic.w	r3, r3, #12
 80010ec:	627b      	str	r3, [r7, #36]	; 0x24
 80010ee:	683b      	ldr	r3, [r7, #0]
 80010f0:	889a      	ldrh	r2, [r3, #4]
 80010f2:	683b      	ldr	r3, [r7, #0]
 80010f4:	891b      	ldrh	r3, [r3, #8]
 80010f6:	4313      	orrs	r3, r2
 80010f8:	b29a      	uxth	r2, r3
 80010fa:	683b      	ldr	r3, [r7, #0]
 80010fc:	895b      	ldrh	r3, [r3, #10]
 80010fe:	4313      	orrs	r3, r2
 8001100:	b29b      	uxth	r3, r3
 8001102:	461a      	mov	r2, r3
 8001104:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001106:	4313      	orrs	r3, r2
 8001108:	627b      	str	r3, [r7, #36]	; 0x24
 800110a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800110c:	b29a      	uxth	r2, r3
 800110e:	687b      	ldr	r3, [r7, #4]
 8001110:	819a      	strh	r2, [r3, #12]
 8001112:	687b      	ldr	r3, [r7, #4]
 8001114:	8a9b      	ldrh	r3, [r3, #20]
 8001116:	b29b      	uxth	r3, r3
 8001118:	627b      	str	r3, [r7, #36]	; 0x24
 800111a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800111c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8001120:	627b      	str	r3, [r7, #36]	; 0x24
 8001122:	683b      	ldr	r3, [r7, #0]
 8001124:	899b      	ldrh	r3, [r3, #12]
 8001126:	461a      	mov	r2, r3
 8001128:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800112a:	4313      	orrs	r3, r2
 800112c:	627b      	str	r3, [r7, #36]	; 0x24
 800112e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001130:	b29a      	uxth	r2, r3
 8001132:	687b      	ldr	r3, [r7, #4]
 8001134:	829a      	strh	r2, [r3, #20]
 8001136:	f107 0308 	add.w	r3, r7, #8
 800113a:	4618      	mov	r0, r3
 800113c:	f7ff fe86 	bl	8000e4c <RCC_GetClocksFreq>
 8001140:	687b      	ldr	r3, [r7, #4]
 8001142:	4a30      	ldr	r2, [pc, #192]	; (8001204 <USART_Init+0x168>)
 8001144:	4293      	cmp	r3, r2
 8001146:	d003      	beq.n	8001150 <USART_Init+0xb4>
 8001148:	687b      	ldr	r3, [r7, #4]
 800114a:	4a2f      	ldr	r2, [pc, #188]	; (8001208 <USART_Init+0x16c>)
 800114c:	4293      	cmp	r3, r2
 800114e:	d102      	bne.n	8001156 <USART_Init+0xba>
 8001150:	697b      	ldr	r3, [r7, #20]
 8001152:	623b      	str	r3, [r7, #32]
 8001154:	e001      	b.n	800115a <USART_Init+0xbe>
 8001156:	693b      	ldr	r3, [r7, #16]
 8001158:	623b      	str	r3, [r7, #32]
 800115a:	687b      	ldr	r3, [r7, #4]
 800115c:	899b      	ldrh	r3, [r3, #12]
 800115e:	b29b      	uxth	r3, r3
 8001160:	b21b      	sxth	r3, r3
 8001162:	2b00      	cmp	r3, #0
 8001164:	da0c      	bge.n	8001180 <USART_Init+0xe4>
 8001166:	6a3a      	ldr	r2, [r7, #32]
 8001168:	4613      	mov	r3, r2
 800116a:	009b      	lsls	r3, r3, #2
 800116c:	4413      	add	r3, r2
 800116e:	009a      	lsls	r2, r3, #2
 8001170:	441a      	add	r2, r3
 8001172:	683b      	ldr	r3, [r7, #0]
 8001174:	681b      	ldr	r3, [r3, #0]
 8001176:	005b      	lsls	r3, r3, #1
 8001178:	fbb2 f3f3 	udiv	r3, r2, r3
 800117c:	61fb      	str	r3, [r7, #28]
 800117e:	e00b      	b.n	8001198 <USART_Init+0xfc>
 8001180:	6a3a      	ldr	r2, [r7, #32]
 8001182:	4613      	mov	r3, r2
 8001184:	009b      	lsls	r3, r3, #2
 8001186:	4413      	add	r3, r2
 8001188:	009a      	lsls	r2, r3, #2
 800118a:	441a      	add	r2, r3
 800118c:	683b      	ldr	r3, [r7, #0]
 800118e:	681b      	ldr	r3, [r3, #0]
 8001190:	009b      	lsls	r3, r3, #2
 8001192:	fbb2 f3f3 	udiv	r3, r2, r3
 8001196:	61fb      	str	r3, [r7, #28]
 8001198:	69fb      	ldr	r3, [r7, #28]
 800119a:	4a1c      	ldr	r2, [pc, #112]	; (800120c <USART_Init+0x170>)
 800119c:	fba2 2303 	umull	r2, r3, r2, r3
 80011a0:	095b      	lsrs	r3, r3, #5
 80011a2:	011b      	lsls	r3, r3, #4
 80011a4:	627b      	str	r3, [r7, #36]	; 0x24
 80011a6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80011a8:	091b      	lsrs	r3, r3, #4
 80011aa:	2264      	movs	r2, #100	; 0x64
 80011ac:	fb02 f303 	mul.w	r3, r2, r3
 80011b0:	69fa      	ldr	r2, [r7, #28]
 80011b2:	1ad3      	subs	r3, r2, r3
 80011b4:	61bb      	str	r3, [r7, #24]
 80011b6:	687b      	ldr	r3, [r7, #4]
 80011b8:	899b      	ldrh	r3, [r3, #12]
 80011ba:	b29b      	uxth	r3, r3
 80011bc:	b21b      	sxth	r3, r3
 80011be:	2b00      	cmp	r3, #0
 80011c0:	da0c      	bge.n	80011dc <USART_Init+0x140>
 80011c2:	69bb      	ldr	r3, [r7, #24]
 80011c4:	00db      	lsls	r3, r3, #3
 80011c6:	3332      	adds	r3, #50	; 0x32
 80011c8:	4a10      	ldr	r2, [pc, #64]	; (800120c <USART_Init+0x170>)
 80011ca:	fba2 2303 	umull	r2, r3, r2, r3
 80011ce:	095b      	lsrs	r3, r3, #5
 80011d0:	f003 0307 	and.w	r3, r3, #7
 80011d4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80011d6:	4313      	orrs	r3, r2
 80011d8:	627b      	str	r3, [r7, #36]	; 0x24
 80011da:	e00b      	b.n	80011f4 <USART_Init+0x158>
 80011dc:	69bb      	ldr	r3, [r7, #24]
 80011de:	011b      	lsls	r3, r3, #4
 80011e0:	3332      	adds	r3, #50	; 0x32
 80011e2:	4a0a      	ldr	r2, [pc, #40]	; (800120c <USART_Init+0x170>)
 80011e4:	fba2 2303 	umull	r2, r3, r2, r3
 80011e8:	095b      	lsrs	r3, r3, #5
 80011ea:	f003 030f 	and.w	r3, r3, #15
 80011ee:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80011f0:	4313      	orrs	r3, r2
 80011f2:	627b      	str	r3, [r7, #36]	; 0x24
 80011f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80011f6:	b29a      	uxth	r2, r3
 80011f8:	687b      	ldr	r3, [r7, #4]
 80011fa:	811a      	strh	r2, [r3, #8]
 80011fc:	bf00      	nop
 80011fe:	3728      	adds	r7, #40	; 0x28
 8001200:	46bd      	mov	sp, r7
 8001202:	bd80      	pop	{r7, pc}
 8001204:	40011000 	.word	0x40011000
 8001208:	40011400 	.word	0x40011400
 800120c:	51eb851f 	.word	0x51eb851f

08001210 <USART_Cmd>:
 8001210:	b480      	push	{r7}
 8001212:	b083      	sub	sp, #12
 8001214:	af00      	add	r7, sp, #0
 8001216:	6078      	str	r0, [r7, #4]
 8001218:	460b      	mov	r3, r1
 800121a:	70fb      	strb	r3, [r7, #3]
 800121c:	78fb      	ldrb	r3, [r7, #3]
 800121e:	2b00      	cmp	r3, #0
 8001220:	d008      	beq.n	8001234 <USART_Cmd+0x24>
 8001222:	687b      	ldr	r3, [r7, #4]
 8001224:	899b      	ldrh	r3, [r3, #12]
 8001226:	b29b      	uxth	r3, r3
 8001228:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800122c:	b29a      	uxth	r2, r3
 800122e:	687b      	ldr	r3, [r7, #4]
 8001230:	819a      	strh	r2, [r3, #12]
 8001232:	e007      	b.n	8001244 <USART_Cmd+0x34>
 8001234:	687b      	ldr	r3, [r7, #4]
 8001236:	899b      	ldrh	r3, [r3, #12]
 8001238:	b29b      	uxth	r3, r3
 800123a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800123e:	b29a      	uxth	r2, r3
 8001240:	687b      	ldr	r3, [r7, #4]
 8001242:	819a      	strh	r2, [r3, #12]
 8001244:	bf00      	nop
 8001246:	370c      	adds	r7, #12
 8001248:	46bd      	mov	sp, r7
 800124a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800124e:	4770      	bx	lr

08001250 <USART_SendData>:
 8001250:	b480      	push	{r7}
 8001252:	b083      	sub	sp, #12
 8001254:	af00      	add	r7, sp, #0
 8001256:	6078      	str	r0, [r7, #4]
 8001258:	460b      	mov	r3, r1
 800125a:	807b      	strh	r3, [r7, #2]
 800125c:	887b      	ldrh	r3, [r7, #2]
 800125e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8001262:	b29a      	uxth	r2, r3
 8001264:	687b      	ldr	r3, [r7, #4]
 8001266:	809a      	strh	r2, [r3, #4]
 8001268:	bf00      	nop
 800126a:	370c      	adds	r7, #12
 800126c:	46bd      	mov	sp, r7
 800126e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001272:	4770      	bx	lr

08001274 <NVIC_SetPriority>:
 8001274:	b480      	push	{r7}
 8001276:	b083      	sub	sp, #12
 8001278:	af00      	add	r7, sp, #0
 800127a:	4603      	mov	r3, r0
 800127c:	6039      	str	r1, [r7, #0]
 800127e:	71fb      	strb	r3, [r7, #7]
 8001280:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001284:	2b00      	cmp	r3, #0
 8001286:	da0b      	bge.n	80012a0 <NVIC_SetPriority+0x2c>
 8001288:	683b      	ldr	r3, [r7, #0]
 800128a:	b2da      	uxtb	r2, r3
 800128c:	490c      	ldr	r1, [pc, #48]	; (80012c0 <NVIC_SetPriority+0x4c>)
 800128e:	79fb      	ldrb	r3, [r7, #7]
 8001290:	f003 030f 	and.w	r3, r3, #15
 8001294:	3b04      	subs	r3, #4
 8001296:	0112      	lsls	r2, r2, #4
 8001298:	b2d2      	uxtb	r2, r2
 800129a:	440b      	add	r3, r1
 800129c:	761a      	strb	r2, [r3, #24]
 800129e:	e009      	b.n	80012b4 <NVIC_SetPriority+0x40>
 80012a0:	683b      	ldr	r3, [r7, #0]
 80012a2:	b2da      	uxtb	r2, r3
 80012a4:	4907      	ldr	r1, [pc, #28]	; (80012c4 <NVIC_SetPriority+0x50>)
 80012a6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80012aa:	0112      	lsls	r2, r2, #4
 80012ac:	b2d2      	uxtb	r2, r2
 80012ae:	440b      	add	r3, r1
 80012b0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80012b4:	bf00      	nop
 80012b6:	370c      	adds	r7, #12
 80012b8:	46bd      	mov	sp, r7
 80012ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012be:	4770      	bx	lr
 80012c0:	e000ed00 	.word	0xe000ed00
 80012c4:	e000e100 	.word	0xe000e100

080012c8 <SysTick_Config>:
 80012c8:	b580      	push	{r7, lr}
 80012ca:	b082      	sub	sp, #8
 80012cc:	af00      	add	r7, sp, #0
 80012ce:	6078      	str	r0, [r7, #4]
 80012d0:	687b      	ldr	r3, [r7, #4]
 80012d2:	3b01      	subs	r3, #1
 80012d4:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80012d8:	d301      	bcc.n	80012de <SysTick_Config+0x16>
 80012da:	2301      	movs	r3, #1
 80012dc:	e00f      	b.n	80012fe <SysTick_Config+0x36>
 80012de:	4a0a      	ldr	r2, [pc, #40]	; (8001308 <SysTick_Config+0x40>)
 80012e0:	687b      	ldr	r3, [r7, #4]
 80012e2:	3b01      	subs	r3, #1
 80012e4:	6053      	str	r3, [r2, #4]
 80012e6:	210f      	movs	r1, #15
 80012e8:	f04f 30ff 	mov.w	r0, #4294967295
 80012ec:	f7ff ffc2 	bl	8001274 <NVIC_SetPriority>
 80012f0:	4b05      	ldr	r3, [pc, #20]	; (8001308 <SysTick_Config+0x40>)
 80012f2:	2200      	movs	r2, #0
 80012f4:	609a      	str	r2, [r3, #8]
 80012f6:	4b04      	ldr	r3, [pc, #16]	; (8001308 <SysTick_Config+0x40>)
 80012f8:	2207      	movs	r2, #7
 80012fa:	601a      	str	r2, [r3, #0]
 80012fc:	2300      	movs	r3, #0
 80012fe:	4618      	mov	r0, r3
 8001300:	3708      	adds	r7, #8
 8001302:	46bd      	mov	sp, r7
 8001304:	bd80      	pop	{r7, pc}
 8001306:	bf00      	nop
 8001308:	e000e010 	.word	0xe000e010

0800130c <TimerInit>:
 800130c:	b580      	push	{r7, lr}
 800130e:	b084      	sub	sp, #16
 8001310:	af00      	add	r7, sp, #0
 8001312:	463b      	mov	r3, r7
 8001314:	4618      	mov	r0, r3
 8001316:	f7ff fd99 	bl	8000e4c <RCC_GetClocksFreq>
 800131a:	683b      	ldr	r3, [r7, #0]
 800131c:	4a0a      	ldr	r2, [pc, #40]	; (8001348 <TimerInit+0x3c>)
 800131e:	fba2 2303 	umull	r2, r3, r2, r3
 8001322:	099b      	lsrs	r3, r3, #6
 8001324:	4618      	mov	r0, r3
 8001326:	f7ff ffcf 	bl	80012c8 <SysTick_Config>
 800132a:	2101      	movs	r1, #1
 800132c:	f04f 30ff 	mov.w	r0, #4294967295
 8001330:	f7ff ffa0 	bl	8001274 <NVIC_SetPriority>
 8001334:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8001338:	2100      	movs	r1, #0
 800133a:	4804      	ldr	r0, [pc, #16]	; (800134c <TimerInit+0x40>)
 800133c:	f000 f822 	bl	8001384 <memsetl>
 8001340:	bf00      	nop
 8001342:	3710      	adds	r7, #16
 8001344:	46bd      	mov	sp, r7
 8001346:	bd80      	pop	{r7, pc}
 8001348:	10624dd3 	.word	0x10624dd3
 800134c:	2000004c 	.word	0x2000004c

08001350 <GetMilSecTick>:
 8001350:	b480      	push	{r7}
 8001352:	af00      	add	r7, sp, #0
 8001354:	4b03      	ldr	r3, [pc, #12]	; (8001364 <GetMilSecTick+0x14>)
 8001356:	681b      	ldr	r3, [r3, #0]
 8001358:	4618      	mov	r0, r3
 800135a:	46bd      	mov	sp, r7
 800135c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001360:	4770      	bx	lr
 8001362:	bf00      	nop
 8001364:	200001cc 	.word	0x200001cc

08001368 <SysTick_Handler>:
 8001368:	b480      	push	{r7}
 800136a:	af00      	add	r7, sp, #0
 800136c:	4b04      	ldr	r3, [pc, #16]	; (8001380 <SysTick_Handler+0x18>)
 800136e:	681b      	ldr	r3, [r3, #0]
 8001370:	3301      	adds	r3, #1
 8001372:	4a03      	ldr	r2, [pc, #12]	; (8001380 <SysTick_Handler+0x18>)
 8001374:	6013      	str	r3, [r2, #0]
 8001376:	bf00      	nop
 8001378:	46bd      	mov	sp, r7
 800137a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800137e:	4770      	bx	lr
 8001380:	200001cc 	.word	0x200001cc

08001384 <memsetl>:
 8001384:	b480      	push	{r7}
 8001386:	b083      	sub	sp, #12
 8001388:	af00      	add	r7, sp, #0
 800138a:	6078      	str	r0, [r7, #4]
 800138c:	460b      	mov	r3, r1
 800138e:	70fb      	strb	r3, [r7, #3]
 8001390:	4613      	mov	r3, r2
 8001392:	803b      	strh	r3, [r7, #0]
 8001394:	e004      	b.n	80013a0 <memsetl+0x1c>
 8001396:	687b      	ldr	r3, [r7, #4]
 8001398:	1c5a      	adds	r2, r3, #1
 800139a:	607a      	str	r2, [r7, #4]
 800139c:	78fa      	ldrb	r2, [r7, #3]
 800139e:	701a      	strb	r2, [r3, #0]
 80013a0:	883b      	ldrh	r3, [r7, #0]
 80013a2:	1e5a      	subs	r2, r3, #1
 80013a4:	803a      	strh	r2, [r7, #0]
 80013a6:	2b00      	cmp	r3, #0
 80013a8:	d1f5      	bne.n	8001396 <memsetl+0x12>
 80013aa:	bf00      	nop
 80013ac:	370c      	adds	r7, #12
 80013ae:	46bd      	mov	sp, r7
 80013b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013b4:	4770      	bx	lr
	...

080013b8 <__libc_init_array>:
 80013b8:	b570      	push	{r4, r5, r6, lr}
 80013ba:	4d0d      	ldr	r5, [pc, #52]	; (80013f0 <__libc_init_array+0x38>)
 80013bc:	4c0d      	ldr	r4, [pc, #52]	; (80013f4 <__libc_init_array+0x3c>)
 80013be:	1b64      	subs	r4, r4, r5
 80013c0:	10a4      	asrs	r4, r4, #2
 80013c2:	2600      	movs	r6, #0
 80013c4:	42a6      	cmp	r6, r4
 80013c6:	d109      	bne.n	80013dc <__libc_init_array+0x24>
 80013c8:	4d0b      	ldr	r5, [pc, #44]	; (80013f8 <__libc_init_array+0x40>)
 80013ca:	4c0c      	ldr	r4, [pc, #48]	; (80013fc <__libc_init_array+0x44>)
 80013cc:	f000 f818 	bl	8001400 <_init>
 80013d0:	1b64      	subs	r4, r4, r5
 80013d2:	10a4      	asrs	r4, r4, #2
 80013d4:	2600      	movs	r6, #0
 80013d6:	42a6      	cmp	r6, r4
 80013d8:	d105      	bne.n	80013e6 <__libc_init_array+0x2e>
 80013da:	bd70      	pop	{r4, r5, r6, pc}
 80013dc:	f855 3b04 	ldr.w	r3, [r5], #4
 80013e0:	4798      	blx	r3
 80013e2:	3601      	adds	r6, #1
 80013e4:	e7ee      	b.n	80013c4 <__libc_init_array+0xc>
 80013e6:	f855 3b04 	ldr.w	r3, [r5], #4
 80013ea:	4798      	blx	r3
 80013ec:	3601      	adds	r6, #1
 80013ee:	e7f2      	b.n	80013d6 <__libc_init_array+0x1e>
 80013f0:	08001418 	.word	0x08001418
 80013f4:	08001418 	.word	0x08001418
 80013f8:	08001418 	.word	0x08001418
 80013fc:	0800141c 	.word	0x0800141c

08001400 <_init>:
 8001400:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001402:	bf00      	nop
 8001404:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001406:	bc08      	pop	{r3}
 8001408:	469e      	mov	lr, r3
 800140a:	4770      	bx	lr

0800140c <_fini>:
 800140c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800140e:	bf00      	nop
 8001410:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001412:	bc08      	pop	{r3}
 8001414:	469e      	mov	lr, r3
 8001416:	4770      	bx	lr
